<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>🚨 [置顶] 公开计划</title>
    <url>/2020/01/07/public-top-plans/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>这里将放一些公开的博客增强计划, 以提示拖延症晚期的我…</p>
</blockquote>
<a id="more"></a>
<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug?"></a>Bug?</h1><ul>
<li style="list-style: none"><input type="checkbox"> 标签/分类页面, 数字表示的含义与直观感受不一致<ul>
<li>详细描述: 不清楚 “目前共计 xx 个标签/分类 “ 中 a 的数字是否把草稿中也统计进去了? 还是重复的标签/分类计数也算进去了?</li>
<li>问题页面:<ul>
<li><a href="https://straydragon.github.io/categories/">https://straydragon.github.io/categories/</a></li>
<li><a href="https://straydragon.github.io/tags/">https://straydragon.github.io/tags/</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><p>优先级由高到低:</p>
<ul>
<li>[长期] 博客文章润色优化</li>
<li>[长期] 博客分类 / 标签 / “commit messages” 规范 <a href="https://straydragon.github.io/2019/12/09/what-is-a-good-tech-blog/">related</a></li>
</ul>
<hr>
<p><strong>提示</strong>:</p>
<p>目前,所有文章将会比较水, 并且会渐进式更新, 不保证文章完整性</p>
<p>在完成以下后, 内容将可以被大部分搜索引擎抓取,博客文章将不再渐进式更新,将会成稿后发布啦~~~</p>
<hr>
<ul>
<li style="list-style: none"><input type="checkbox" checked> 迁到个人域名下</li>
<li>博客评论系统调研与升级(需要保存评论吗?= - =)</li>
<li>博客内容(文字,代码,图片等)的集中管理</li>
<li>更换favicon</li>
</ul>
<h1 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h1><blockquote>
<p>没想好(继续拖延23333</p>
</blockquote>
<h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><h2 id="待更新-如果不使用静态博客生成器-我希望至少有什么功能呢"><a href="#待更新-如果不使用静态博客生成器-我希望至少有什么功能呢" class="headerlink" title="(待更新) 如果不使用静态博客生成器,我希望至少有什么功能呢?"></a>(待更新) 如果不使用静态博客生成器,我希望至少有什么功能呢?</h2><ul>
<li>标签</li>
<li>分类</li>
<li>代码高亮</li>
<li>评论</li>
<li>目录(随焦点移动)</li>
<li>置顶</li>
<li>阅读数</li>
<li>访问人数</li>
<li>RSS/Atom</li>
<li>搜索</li>
</ul>
]]></content>
      <categories>
        <category>计划</category>
      </categories>
      <tags>
        <tag>Plan</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令行世界: 生存指南</title>
    <url>/2020/02/10/no-linux-command-line-no-life/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>RT
我的读书笔记: 摘自《Linux命令行与Shell脚本编程大全》中那些有意义的技巧和命令…</p>
<a id="more"></a>
<p>鉴于Linux发行版太多了, 这里只会记录那些看上去通用的命令和技巧,旨在在大多数环境中正常工作.
另请注意:</p>
<ul>
<li>这些命令运行在 TTY (<strong>T</strong>ele<strong>Ty</strong>peWriter) 或 TE(Terminal Emulator)中,为方便查找将以每个标题中以<code>--TTY/--TE/--TE/TTY</code>表示适用性.</li>
<li>大多数终端下使用的命令都有man手册或-help/–help/…帮助信息,若想深入了解请输入那些命令查看</li>
<li>占位符(placeholder) 一般使用大写字母(如: KEYWORD) 表示需要用户根据自己条件更改相应信息</li>
</ul>
<h1 id="命令-Commands"><a href="#命令-Commands" class="headerlink" title="命令 Commands"></a>命令 Commands</h1><h2 id="setterm-–TTY"><a href="#setterm-–TTY" class="headerlink" title="setterm –TTY"></a><code>setterm</code> –TTY</h2><pre><code class="bash">$ # 重见光明
$ setterm -inversescreen on # 反转屏幕颜色 黑-&gt;白
$ # 或者
$ setterm -background white
$ setterm -foreground black
$
$ # 感受色彩 COLOR: black,red,green,yellow,blue,magenta,cyan,white
$ setterm -background COLOR
$ setterm -foreground COLOR
$
$ # 一切归初
$ setterm -reset
</code></pre>
<blockquote>
<p>P19</p>
</blockquote>
<h2 id="man-–TE-TTY"><a href="#man-–TE-TTY" class="headerlink" title="man –TE/TTY"></a><code>man</code> –TE/TTY</h2><h3 id="按关键字查找已有手册"><a href="#按关键字查找已有手册" class="headerlink" title="按关键字查找已有手册"></a>按关键字查找已有手册</h3><pre><code class="bash">$ man -k KEYWORD # KEYWORD: 按关键字查找已有手册
</code></pre>
<blockquote>
<p>P36</p>
</blockquote>
<h3 id="获取不同章节-section-下的手册"><a href="#获取不同章节-section-下的手册" class="headerlink" title="获取不同章节(section)下的手册"></a>获取不同章节(section)下的手册</h3><pre><code class="bash">$ man SECTION_NUMBER TARGET # 获取TARGET的SECTION_NUMBER的手册
SECTION_NUMBER:
       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions, e.g. /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]
</code></pre>
<blockquote>
<p>P37 以及 <code>$ man man</code></p>
</blockquote>
<h2 id="rm-–TE-TTY"><a href="#rm-–TE-TTY" class="headerlink" title="rm –TE/TTY"></a><code>rm</code> –TE/TTY</h2><h3 id="推荐替换默认rm命令-以防手划"><a href="#推荐替换默认rm命令-以防手划" class="headerlink" title="推荐替换默认rm命令,以防手划"></a>推荐替换默认<code>rm</code>命令,以防手划</h3><pre><code>$ alias rm=&#39;rm -i&#39;
$ rm -i FILE
rm: remove regular file &#39;FILE&#39;?:y&lt;CR&gt; # 确认删除
# 或者
rm: remove regular file &#39;FILE&#39;?:n&lt;CR&gt; # 取消
</code></pre><h1 id="Notes"><a href="#Notes" class="headerlink" title="Notes:"></a>Notes:</h1><h2 id="从哪里知道启动哪个Shell"><a href="#从哪里知道启动哪个Shell" class="headerlink" title="从哪里知道启动哪个Shell?"></a>从哪里知道启动哪个Shell?</h2><pre><code class="bash">$ cat /etc/passwd | grep USERNAME # USERNAME: 如 root
USERNAME:x:1000:1000:USERNAME:/home/USERNAME:/usr/bin/zsh # &lt;- 这里即默认启动的Shell
</code></pre>
<blockquote>
<p>P33</p>
</blockquote>
<h2 id="Linux文件目录含义与名称"><a href="#Linux文件目录含义与名称" class="headerlink" title="Linux文件目录含义与名称"></a>Linux文件目录含义与名称</h2><p>TODO</p>
<blockquote>
<p>P39</p>
</blockquote>
<h2 id="Linux文件权限见ls-l-输出"><a href="#Linux文件权限见ls-l-输出" class="headerlink" title="Linux文件权限见ls -l 输出"></a>Linux文件权限见<code>ls -l</code> 输出</h2><p>TODO</p>
<blockquote>
<p>P43,45</p>
</blockquote>
<h2 id="适用于模式匹配的内置命令"><a href="#适用于模式匹配的内置命令" class="headerlink" title="适用于模式匹配的内置命令"></a>适用于模式匹配的内置命令</h2><ul>
<li><code>?</code>(1), <code>*</code>(0 or N)</li>
<li><code>[CHARACTERS]</code>(可选列表) <code>[!CHARACTERS]</code>(排除列表)</li>
</ul>
<blockquote>
<p>P45</p>
</blockquote>
<h2 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h2><ul>
<li>符号链接/软链接</li>
<li>硬链接</li>
</ul>
<h1 id="基本命令清单备忘录"><a href="#基本命令清单备忘录" class="headerlink" title="基本命令清单备忘录"></a>基本命令清单备忘录</h1><ul>
<li><code>CMD</code>  : 代表这个CMD默认来自外部指令(非内建)</li>
<li><code>CMD</code>*: 代表这个CMD默认来自Shell(Bash-like)自身或保留字(内建)</li>
<li><code>CMD</code>+ : 代表这个CMD有内建和非内建的实现<blockquote>
<p>可以用 <code>type CMD</code> 来判断内建/非内建指令</p>
</blockquote>
</li>
</ul>
<h2 id="Shell环境管理"><a href="#Shell环境管理" class="headerlink" title="Shell环境管理"></a>Shell环境管理</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><h4 id="export"><a href="#export" class="headerlink" title="export*"></a><code>export</code>*</h4><h4 id="lt-env-gt-quot-lt-value-gt-quot"><a href="#lt-env-gt-quot-lt-value-gt-quot" class="headerlink" title="&lt;env&gt;=&quot;&lt;value&gt;&quot;"></a><code>&lt;env&gt;=&quot;&lt;value&gt;&quot;</code></h4><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><h4 id="unset"><a href="#unset" class="headerlink" title="unset*"></a><code>unset</code>*</h4><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><h4 id="printenv"><a href="#printenv" class="headerlink" title="printenv"></a><code>printenv</code></h4><h4 id="env"><a href="#env" class="headerlink" title="env"></a><code>env</code></h4><h4 id="set"><a href="#set" class="headerlink" title="set*"></a><code>set</code>*</h4><h4 id="echo"><a href="#echo" class="headerlink" title="echo+"></a><code>echo</code>+</h4><h2 id="命令管理"><a href="#命令管理" class="headerlink" title="命令管理"></a>命令管理</h2><h3 id="type"><a href="#type" class="headerlink" title="type*"></a><code>type</code>*</h3><h3 id="which"><a href="#which" class="headerlink" title="which*"></a><code>which</code>*</h3><h3 id="history"><a href="#history" class="headerlink" title="history*"></a><code>history</code>*</h3><h3 id="alias"><a href="#alias" class="headerlink" title="alias*"></a><code>alias</code>*</h3><h2 id="路径管理"><a href="#路径管理" class="headerlink" title="路径管理"></a>路径管理</h2><h3 id="cd"><a href="#cd" class="headerlink" title="cd*"></a><code>cd</code>*</h3><h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd*"></a><code>pwd</code>*</h3><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><h3 id="增-1"><a href="#增-1" class="headerlink" title="增"></a>增</h3><h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a><code>touch</code></h4><h4 id="ln"><a href="#ln" class="headerlink" title="ln"></a><code>ln</code></h4><h4 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a><code>mkdir</code></h4><h4 id="cp"><a href="#cp" class="headerlink" title="cp"></a><code>cp</code></h4><h4 id="gzip-zip-…-gunzip-unzip-…-tar"><a href="#gzip-zip-…-gunzip-unzip-…-tar" class="headerlink" title="gzip,zip,… / gunzip,unzip,… | tar"></a><code>gzip</code>,<code>zip</code>,… / <code>gunzip</code>,<code>unzip</code>,… | <code>tar</code></h4><h3 id="删-1"><a href="#删-1" class="headerlink" title="删"></a>删</h3><h4 id="rm"><a href="#rm" class="headerlink" title="rm"></a><code>rm</code></h4><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><h4 id="mv"><a href="#mv" class="headerlink" title="mv"></a><code>mv</code></h4><h4 id="umask"><a href="#umask" class="headerlink" title="umask"></a><code>umask</code></h4><h4 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a><code>chmod</code></h4><h4 id="chown"><a href="#chown" class="headerlink" title="chown"></a><code>chown</code></h4><h4 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a><code>chgrp</code></h4><h4 id="sed"><a href="#sed" class="headerlink" title="sed"></a><code>sed</code></h4><h4 id="gawk"><a href="#gawk" class="headerlink" title="gawk"></a><code>gawk</code></h4><h3 id="查-1"><a href="#查-1" class="headerlink" title="查"></a>查</h3><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a><code>ls</code></h4><h4 id="file"><a href="#file" class="headerlink" title="file"></a><code>file</code></h4><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a><code>cat</code></h4><h4 id="more-less"><a href="#more-less" class="headerlink" title="more/less"></a><code>more</code>/<code>less</code></h4><h4 id="head-tail"><a href="#head-tail" class="headerlink" title="head/tail"></a><code>head</code>/<code>tail</code></h4><h4 id="du"><a href="#du" class="headerlink" title="du"></a><code>du</code></h4><h4 id="sort"><a href="#sort" class="headerlink" title="sort"></a><code>sort</code></h4><h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a><code>grep</code></h4><h2 id="文件系统管理"><a href="#文件系统管理" class="headerlink" title="文件系统管理"></a>文件系统管理</h2><ul>
<li><code>fdisk</code></li>
<li><code>mkfs.*</code></li>
<li><code>fsck</code></li>
</ul>
<h2 id="进程-Process-管理"><a href="#进程-Process-管理" class="headerlink" title="进程(Process)管理"></a>进程(Process)管理</h2><h3 id="增-2"><a href="#增-2" class="headerlink" title="增"></a>增</h3><h4 id="sleep"><a href="#sleep" class="headerlink" title="sleep"></a><code>sleep</code></h4><h4 id="CMD-amp"><a href="#CMD-amp" class="headerlink" title="CMD &amp;"></a><code>CMD &amp;</code></h4><h4 id="nohup"><a href="#nohup" class="headerlink" title="nohup"></a><code>nohup</code></h4><h4 id="bg"><a href="#bg" class="headerlink" title="bg*"></a><code>bg</code>*</h4><h4 id="nice"><a href="#nice" class="headerlink" title="nice"></a><code>nice</code></h4><h3 id="删-2"><a href="#删-2" class="headerlink" title="删"></a>删</h3><h4 id="kill"><a href="#kill" class="headerlink" title="kill"></a><code>kill</code></h4><h4 id="killall"><a href="#killall" class="headerlink" title="killall"></a><code>killall</code></h4><h4 id="exit"><a href="#exit" class="headerlink" title="exit"></a><code>exit</code></h4><h3 id="改-1"><a href="#改-1" class="headerlink" title="改"></a>改</h3><h4 id="renice"><a href="#renice" class="headerlink" title="renice"></a><code>renice</code></h4><h3 id="查-2"><a href="#查-2" class="headerlink" title="查"></a>查</h3><h4 id="ps"><a href="#ps" class="headerlink" title="ps*"></a><code>ps</code>*</h4><h4 id="jobs"><a href="#jobs" class="headerlink" title="jobs*"></a><code>jobs</code>*</h4><h4 id="coproc"><a href="#coproc" class="headerlink" title="coproc*"></a><code>coproc</code>*</h4><h4 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a><code>lsof</code></h4><h2 id="磁盘-Disk-管理"><a href="#磁盘-Disk-管理" class="headerlink" title="磁盘(Disk)管理"></a>磁盘(Disk)管理</h2><h3 id="增-3"><a href="#增-3" class="headerlink" title="增"></a>增</h3><h4 id="mount"><a href="#mount" class="headerlink" title="mount"></a><code>mount</code></h4><h3 id="删-3"><a href="#删-3" class="headerlink" title="删"></a>删</h3><h4 id="unmount"><a href="#unmount" class="headerlink" title="unmount"></a><code>unmount</code></h4><h3 id="查-3"><a href="#查-3" class="headerlink" title="查"></a>查</h3><h4 id="df"><a href="#df" class="headerlink" title="df"></a><code>df</code></h4><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="增-4"><a href="#增-4" class="headerlink" title="增"></a>增</h3><ul>
<li><code>useradd</code><h3 id="删-4"><a href="#删-4" class="headerlink" title="删"></a>删</h3></li>
<li><code>userdel</code><h3 id="改-2"><a href="#改-2" class="headerlink" title="改"></a>改</h3></li>
<li><code>usermod</code></li>
<li><code>passwd</code> / <code>chpasswd</code></li>
<li><code>chage</code></li>
<li><code>chage</code></li>
<li><code>chsh</code></li>
</ul>
<h2 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h2><h3 id="增-5"><a href="#增-5" class="headerlink" title="增"></a>增</h3><ul>
<li><code>groupadd</code><h3 id="改-3"><a href="#改-3" class="headerlink" title="改"></a>改</h3></li>
<li><code>groupmod</code></li>
</ul>
]]></content>
      <categories>
        <category>读书笔记</category>
        <category>备忘录</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>我的工具链</title>
    <url>/2020/01/14/my-tools/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>[<strong>WIP</strong>]</p>
<p>用于记录一些十分高效好用的工具以及使用经验,教训与总结</p>
<p>我日常使用的大部分主要为:</p>
<ul>
<li>命令行工具(CLI)</li>
<li>文本界面工具(TUI)</li>
<li>keyboard-friendly的应用</li>
</ul>
<p>请浏览文章旁的目录, 选择你有兴趣的章节阅读, <del>浏览此文后, 可以对作者喜好的工具链有清楚的认识</del>(为什么要知道这个 =.=), 如果您觉得有任何疑惑或想给我一些推荐,欢迎留言交流哦~</p>
</blockquote>
<a id="more"></a>
<hr>
<p>结构:</p>
<p>目前正在进行</p>
<ul>
<li>清单列表</li>
<li>针对每个的<ul>
<li>描述补充</li>
<li>使用经验, 新手建议</li>
<li>总结/教训</li>
<li>参考</li>
</ul>
</li>
</ul>
<hr>
<h1 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a><code>tmux</code></h1><ul>
<li>单终端复用<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/102546608" target="_blank" rel="noopener">一文助你打通 tmux</a>
<a href="https://github.com/search?q=tmux+config&amp;ref=opensearch" target="_blank" rel="noopener">Search · tmux config</a>
<a href="https://github.com/tony/tmux-config/blob/master/.tmux.conf" target="_blank" rel="noopener">tmux-config/.tmux.conf at master · tony/tmux-config</a></p>
</blockquote>
</li>
</ul>
<h1 id="i3-wm"><a href="#i3-wm" class="headerlink" title="i3-wm"></a><code>i3-wm</code></h1><ul>
<li>窗口管理器</li>
</ul>
<h1 id="NeoVim-Vim"><a href="#NeoVim-Vim" class="headerlink" title="NeoVim / Vim"></a><code>NeoVim / Vim</code></h1><ul>
<li>编辑器+一堆插件</li>
</ul>
<h1 id="Shelly-SSH-Client-App"><a href="#Shelly-SSH-Client-App" class="headerlink" title="Shelly (SSH Client App)"></a><code>Shelly</code> (SSH Client App)</h1><ul>
<li>iOS/iPadOS</li>
</ul>
<h1 id="ranger"><a href="#ranger" class="headerlink" title="ranger"></a><code>ranger</code></h1><ul>
<li>TUI 文件管理器</li>
</ul>
<h1 id="autojump"><a href="#autojump" class="headerlink" title="autojump"></a><code>autojump</code></h1><ul>
<li>（不推荐 慢）快速跳转</li>
</ul>
<h1 id="z-lua"><a href="#z-lua" class="headerlink" title="z.lua"></a><code>z.lua</code></h1><ul>
<li>快速跳转</li>
</ul>
<h1 id="tldr"><a href="#tldr" class="headerlink" title="tldr"></a><code>tldr</code></h1><ul>
<li>终端工具简易使用片段</li>
</ul>
<h1 id="icdiff"><a href="#icdiff" class="headerlink" title="icdiff"></a><code>icdiff</code></h1><ul>
<li>横向diff工具</li>
</ul>
<h1 id="tokei"><a href="#tokei" class="headerlink" title="tokei"></a><code>tokei</code></h1><ul>
<li>代码计数工具</li>
</ul>
<h1 id="screenfetch"><a href="#screenfetch" class="headerlink" title="screenfetch"></a><code>screenfetch</code></h1><ul>
<li>设备信息和logo</li>
</ul>
<h1 id="mosh"><a href="#mosh" class="headerlink" title="mosh"></a><code>mosh</code></h1><ul>
<li>基于UDP的“SSH”替代品</li>
<li>有相关的客户/服务器端，适合较差网络，可断网重连，但是没有明显改善我的iPad与Linux/Android通信的摁键延迟问题</li>
</ul>
<h1 id="bat"><a href="#bat" class="headerlink" title="bat"></a><code>bat</code></h1><ul>
<li><code>cat</code>的替代方案,彩色输出</li>
</ul>
<h1 id="exa"><a href="#exa" class="headerlink" title="exa"></a><code>exa</code></h1><ul>
<li><code>tree</code> 和 <code>ls</code> 的替代方案</li>
</ul>
<h1 id="micro"><a href="#micro" class="headerlink" title="micro"></a><code>micro</code></h1><ul>
<li><code>nano</code>的替代方案</li>
</ul>
<h1 id="lazygit"><a href="#lazygit" class="headerlink" title="lazygit"></a><code>lazygit</code></h1><ul>
<li><code>git</code> TUI管理工具</li>
</ul>
<h1 id="fzf"><a href="#fzf" class="headerlink" title="fzf"></a><code>fzf</code></h1><ul>
<li>模糊路径查找工具</li>
</ul>
<h1 id="cppman"><a href="#cppman" class="headerlink" title="cppman"></a><code>cppman</code></h1><ul>
<li>查看C++文档</li>
</ul>
<h1 id="gdbgui"><a href="#gdbgui" class="headerlink" title="gdbgui"></a><code>gdbgui</code></h1><ul>
<li>Web版GDB调试工具</li>
</ul>
<h1 id="Termux-nix-shell"><a href="#Termux-nix-shell" class="headerlink" title="Termux (**nix shell)"></a><code>Termux</code> (**nix shell)</h1><ul>
<li>Android Phone</li>
</ul>
<h1 id="TermuxArch"><a href="#TermuxArch" class="headerlink" title="TermuxArch"></a><code>TermuxArch</code></h1><ul>
<li>模拟ArchLinux环境，使用pacman (需要安装TermuxApp)</li>
</ul>
<h1 id="djJyYXk-base64"><a href="#djJyYXk-base64" class="headerlink" title="djJyYXk=:(base64) ()"></a><code>djJyYXk=:(base64)</code> ()</h1><!-- 首先你需要有个vps, 其次请自行发现哈 :) -->
<pre><code class="bash">$ YmFzaCA8KGN1cmwgLXMgLUwgaHR0cHM6Ly9naXQuaW8vdjJyYXkuc2gp
</code></pre>
<blockquote>
<p>aHR0cHM6Ly8yMzN2Mi5jb20vcG9zdC8xMC8=</p>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
        <category>个人总结</category>
      </categories>
      <tags>
        <tag>Linux Tools</tag>
        <tag>CLI/TUI</tag>
      </tags>
  </entry>
  <entry>
    <title>开发日记: 时间管理应用</title>
    <url>/2020/01/02/development-diary-of-daily-app/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>开新坑咯…</p>
<p>我想通过开发日记的形式记录过程中的想(wa)法(keng)与吐(bei)槽(nüè), 由以往的经验来看,要想快速理解一个项目, 除了开发者关心的版本控制记录之外(如:commit logs / issues 等), 及时的文档与从零开始的介绍也是非常重要的,故诞生此文,希望我能坚持下去~</p>
<p><strong>PS:</strong></p>
<ul>
<li>我不太喜欢把系列文章分成那么多篇,所以暂时都写在这, 以<code>0x</code>序号为主顺序.</li>
<li>笔者初次写作, 若有任何不通或小错误, 任何建议与批评都是欢迎的, 祝你阅读愉快~</li>
</ul>
</blockquote>
<h1 id="0x00-开篇准备与碎碎念"><a href="#0x00-开篇准备与碎碎念" class="headerlink" title="0x00 开篇准备与碎碎念"></a>0x00 开篇准备与碎碎念</h1><a id="more"></a>
<h2 id="动机-契机"><a href="#动机-契机" class="headerlink" title="动机/契机"></a>动机/契机</h2><p>由于<code>Flutter</code>其非常优秀的原生渲染以及跨平台的能力十分诱人,也充分满足我的平台需求,虽然有不少的坑,也写过一些demo体验过,但还是值得一试的;其次我想构建一个完整的软件, 除了这几个前端还要包含后端的部分的,而<a href="https://en.wikipedia.org/wiki/Microservices" target="_blank" rel="noopener">微服务(Microservices)</a> 一词经常出现在我阅读的技术文章中,因此感到很好奇,在阅读相关解释后发现虽然并不是很适合我准备制作的App的需求(有点太小题大作了,当然,如果可以维护到那个规模,试一试也未尝不可),而其”原型”面向服务架构 (<a href="https://en.wikipedia.org/wiki/Service-oriented_architecture" target="_blank" rel="noopener">Service-oriented architecture, SOA</a>) ,更为适合我想要打造出来的那个系统符合的架构名字,标题也因此而来.</p>
<p>希望这个应用的服务可以体现出组件的高复用性, 并易于重构, 并提供其他多个后端网络服务扩展如: 云备份, 搜索, 记录分析等</p>
<blockquote>
<p>以下指导原则是开发，维护和使用SOA的基本原则[3]：</p>
<ul>
<li>可重复使用、粒度、模块性、可组合型、对象化原件、构件化以及具交互操作性</li>
<li>符合开放标准（通用的或行业的）</li>
<li>服务的识别和分类，提供和发布，监控和跟踪。</li>
</ul>
<p>摘自: <a href="https://en.wikipedia.org/wiki/Service-oriented_architecture" target="_blank" rel="noopener">维基百科 SOA的主要三原则</a>:</p>
</blockquote>
<p>以上原则(或者叫特性),加强了这一做法的可行性,正所谓”面向需求编程”, 而不是”面向高端大气上档次的技术名词编程”(虽然这个标题还是有点…),
所以我决定尝试在这一过程中更多地验证所学并克服更多技术问题,深入浅出,以项目驱动学习,实践这些应用技能,适当时候也会反模式让其更适应需求.</p>
<p>想开发这个App的想法来自于我体验过的许多应用,如Android上的 <code>Microsoft Todo</code>, <code>番茄Todo</code> , iOS上的 <code>时间块</code>等时间管理类应用,它们很好很成熟,制作精良. 但还是感觉用的不是很顺手,似乎各有优点,但又没有办法可以很好的扩展, 比如:</p>
<ul>
<li><code>MS Todo</code> 中的 “我的一天” 会给你根据过去添加记录的建议,以快速完成这个动作,而另一些软件却没有这个很实用的功能;</li>
<li><code>番茄Todo</code> 可以再添加事项后提供可选的计时,倒计时功能(虽然很繁琐), 而 <code>MS Todo</code> 却没有(也许这不是这该应用的产品功能吧,但我真的需要这个功能,甚至发了Feature Request…)</li>
<li><code>时间块</code> 有非常直观可视的区块添加事件,是对<code>日历</code>一类应用的加强,但却无法计时.</li>
<li>…
以上这些,如果可以更好的衔接,舒服地UX体验,流畅的UI,那该有多好!</li>
</ul>
<p>除此之外,学习时间管理等自我管理的方法, 养成高效规划与执行的习惯, 才是我的最终目的,而这个辅助工具的功能开发的会首先考虑自己的需求(这也是一强大动力哈), 但我会将其开源,尽可能提供较少开销的<strong>扩展机制</strong>,放到这里<a href="https://github.com/StrayDragon/Daily" target="_blank" rel="noopener">StrayDragon/Daily</a>.</p>
<h2 id="功能计划-待补充"><a href="#功能计划-待补充" class="headerlink" title="功能计划 [待补充]"></a>功能计划 [待补充]</h2><p><strong>注意</strong>: 详细的文档说明,将会更新在Github项目主页上(或许是issues) <a href="https://github.com/StrayDragon/Daily" target="_blank" rel="noopener">StrayDragon/Daily</a></p>
<h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><blockquote>
<p>这里有一些过去的功能需求文档: <a href="https://github.com/StrayDragon/Daily/blob/master/doc/ProjectDescription.md" target="_blank" rel="noopener">StrayDragon/Daily/doc/ProjectDescription</a></p>
</blockquote>
<p>除此之外:</p>
<ul>
<li><p>克隆一下以上提到的那些应用的需求</p>
<ul>
<li>任务/事项的推荐</li>
<li>时间管理模块(如计时…)</li>
<li>[扩展] 数据分析模块(如习惯分析…)</li>
<li>[扩展] 搜素模块</li>
<li>[扩展] 信息持久化模块(如云备份…)</li>
</ul>
</li>
<li><p>至少 Linux/Web 与 Android 的UI布局需要有所更改</p>
</li>
</ul>
<h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><ul>
<li>针对以上 [扩展] 模块进行API的开发</li>
</ul>
<h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><p>如以下表格所示:</p>
<table>
<thead>
<tr>
<th>职责</th>
<th>主要语言</th>
<th>生态</th>
<th>(备选)</th>
<th>用于构建</th>
</tr>
</thead>
<tbody>
<tr>
<td>后端</td>
<td>Python</td>
<td>Django</td>
<td>Flask</td>
<td>API Server</td>
</tr>
<tr>
<td>前端</td>
<td>Dart</td>
<td>Flutter</td>
<td>React Native, Vue混合开发</td>
<td>Linux, Android, Web平台的前端应用</td>
</tr>
</tbody>
</table>
<p>简单来说(以编程语言导向):</p>
<ul>
<li>Flutter 负责 所有的用户端(大前端): Linux, Android, Web (暂时只针对这三个平台优先开发, 其他平台由于多方原因(Win不常用,iOS没Mac…),视情况而定)</li>
<li><p>Python的Web后端生态 负责 API Server的开发 实现前后端分离</p>
</li>
<li><p>数据库将会从以下选择中: 使用SQL数据库(SQLite, MySQL/MariaDB, PostgreSQL)与NoSQL数据库(Redis, MongoDB), 挑选适合的数据库完成衔接后端服务模块</p>
</li>
<li>其他<ul>
<li>会有真正”服务器”去启动Web端, 如Nginx, Gunicorn…</li>
</ul>
</li>
</ul>
<h2 id="可能学到什么-待补充"><a href="#可能学到什么-待补充" class="headerlink" title="可能学到什么 [待补充]"></a>可能学到什么 [待补充]</h2><ul>
<li><p>使用多种应用技术构建整体系统服务的一次项目实践</p>
</li>
<li><p>Web后端应用的相关知识与数据库应用知识</p>
</li>
<li><p>掌握Flutter应用开发的一些小技巧和基本组件,并享受不断学习,重构完善的过程</p>
</li>
<li><p>Git与Github:</p>
<ul>
<li>更规范的Git commit messages / log / tag 管理</li>
<li>更熟练地使用Git常用命令</li>
<li>学会掌握Github Flow 的开发流程.</li>
<li>严格的Review与PR模拟</li>
</ul>
</li>
<li><p>测试与持续集成</p>
<ul>
<li>更强的更为规范的单元/集成测试,覆盖率检查与代码质量检查以及对APIServer的压力测试</li>
<li>与Circle CI等在线持续集成系统结合,完善测试自动化过程</li>
</ul>
</li>
</ul>
<h2 id="参考资料-待补充"><a href="#参考资料-待补充" class="headerlink" title="参考资料 [待补充]"></a>参考资料 [待补充]</h2><h4 id="通用工具"><a href="#通用工具" class="headerlink" title="通用工具"></a>通用工具</h4><h4 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h4><h5 id="PC-amp-Mobile"><a href="#PC-amp-Mobile" class="headerlink" title="PC &amp; Mobile"></a>PC &amp; Mobile</h5><ul>
<li><a href="https://flutter.dev/docs" target="_blank" rel="noopener">Flutter 官方文档</a></li>
<li>《Flutter技术入门与实战》</li>
</ul>
<h6 id="数据持久"><a href="#数据持久" class="headerlink" title="数据持久"></a>数据持久</h6><blockquote>
<p><a href="https://github.com/tekartik/sqflite" target="_blank" rel="noopener">https://github.com/tekartik/sqflite</a> | tekartik/sqflite: SQLite flutter plugin
<a href="https://github.com/tekartik" target="_blank" rel="noopener">https://github.com/tekartik</a> | Tekartik
<a href="https://medium.com/flutter/flutters-ios-application-bundle-6f56d4e88cf8" target="_blank" rel="noopener">https://medium.com/flutter/flutters-ios-application-bundle-6f56d4e88cf8</a> | Flutter’s iOS Application Bundle - Flutter - Medium
<a href="https://github.com/Jaguar-dart/jaguar_orm/issues" target="_blank" rel="noopener">https://github.com/Jaguar-dart/jaguar_orm/issues</a> | Issues · Jaguar-dart/jaguar_orm
<a href="https://juejin.im/post/5c45c72d6fb9a049d81c2b4c" target="_blank" rel="noopener">https://juejin.im/post/5c45c72d6fb9a049d81c2b4c</a> | 手把手教你在Flutter项目优雅的使用ORM数据库 - 掘金</p>
</blockquote>
<h5 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h5><blockquote>
<p><a href="https://github.com/vuetifyjs/vuetify" target="_blank" rel="noopener">vuetifyjs/vuetify: 🐉 Material Component Framework for Vue</a>
<a href="https://github.com/ElemeFE/element" target="_blank" rel="noopener">ElemeFE/element: A Vue.js 2.0 UI Toolkit for Web</a>
<a href="https://github.com/vuematerial/vue-material" target="_blank" rel="noopener">vuematerial/vue-material: Material design for Vue.js</a>
<a href="https://github.com/airyland/vux" target="_blank" rel="noopener">airyland/vux: Mobile UI Components based on Vue &amp; WeUI</a>
<a href="https://github.com/Semantic-UI-Vue/Semantic-UI-Vue" target="_blank" rel="noopener">Semantic-UI-Vue/Semantic-UI-Vue: Semantic UI integration for Vue</a></p>
</blockquote>
<h4 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h4><blockquote>
<p><a href="https://github.com/tiangolo/fastapi" target="_blank" rel="noopener">tiangolo/fastapi: FastAPI framework, high performance, easy to learn, fast to code, ready for production</a>
<a href="https://docs.djangoproject.com/en/3.0/intro/tutorial01/" target="_blank" rel="noopener">Django 官方文档</a>
<a href="https://flask.palletsprojects.com/" target="_blank" rel="noopener">Flask 官方文档</a></p>
</blockquote>
<h5 id="数据持久-1"><a href="#数据持久-1" class="headerlink" title="数据持久"></a>数据持久</h5><blockquote>
<p><a href="https://github.com/dahlia/awesome-sqlalchemy" target="_blank" rel="noopener">dahlia/awesome-sqlalchemy: A curated list of awesome tools for SQLAlchemy</a>
<a href="https://github.com/ponyorm/pony/" target="_blank" rel="noopener">ponyorm/pony: Pony Object Relational Mapper</a></p>
</blockquote>
<h5 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h5><h5 id="维护工具"><a href="#维护工具" class="headerlink" title="维护工具"></a>维护工具</h5><h6 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h6><blockquote>
<p><a href="https://github.com/ansible/ansible?hmsr=pycourses.com&amp;utm_source=pycourses.com&amp;utm_medium=pycourses.com" target="_blank" rel="noopener">ansible/ansible: Ansible is a radically simple IT automation platform that makes your applications and systems easier to deploy. </a></p>
<ul>
<li>Avoid writing scripts or custom code to deploy and update your applications — automate in a language that approaches plain English, using SSH, with no agents to install on remote systems. <a href="https://docs.ansible.com/ansible/" target="_blank" rel="noopener">https://docs.ansible.com/ansible/</a></li>
</ul>
</blockquote>
<h5 id="面向服务体系架构与微服务"><a href="#面向服务体系架构与微服务" class="headerlink" title="面向服务体系架构与微服务"></a>面向服务体系架构与微服务</h5><blockquote>
<p><a href="https://www.redhat.com/zh/topics/microservices/what-are-microservices" target="_blank" rel="noopener">https://www.redhat.com/zh/topics/microservices/what-are-microservices</a> | 什么是微服务？
<a href="https://en.wikipedia.org/wiki/Microservices" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Microservices</a> | Microservices - Wikipedia
<a href="https://zh.wikipedia.org/zh-cn/%E9%9D%A2%E5%90%91%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84" target="_blank" rel="noopener">https://zh.wikipedia.org/zh-cn/%E9%9D%A2%E5%90%91%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84</a> | 面向服务的体系结构 - 维基百科，自由的百科全书
<a href="https://www.zhihu.com/question/65502802" target="_blank" rel="noopener">https://www.zhihu.com/question/65502802</a> | 什么是微服务架构？ - 知乎</p>
</blockquote>
<p>######</p>
<h4 id="工具链相关"><a href="#工具链相关" class="headerlink" title="工具链相关"></a>工具链相关</h4><ul>
<li>《Pro Git》</li>
<li>《Github入门与实践》</li>
</ul>
<h4 id="测试相关"><a href="#测试相关" class="headerlink" title="测试相关"></a>测试相关</h4><ul>
<li>《Google软件测试之道》</li>
<li>《C++ 程序设计实践与技巧 测试驱动开发》</li>
</ul>
<h1 id="0x01-目标-需求分析与应用技术生态调研"><a href="#0x01-目标-需求分析与应用技术生态调研" class="headerlink" title="0x01 目标,需求分析与应用技术生态调研"></a>0x01 目标,需求分析与应用技术生态调研</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><blockquote>
<p>从不同的视角思考, 经常会获得更多的收获. 我将目前的所有认知与思考总结分类于此</p>
</blockquote>
<h3 id="产品目标"><a href="#产品目标" class="headerlink" title="产品目标"></a>产品目标</h3><h3 id="技术目标"><a href="#技术目标" class="headerlink" title="技术目标"></a>技术目标</h3><blockquote>
<p>这个章节将表达我期望使用的应用技术, 熟练程度.</p>
</blockquote>
<ul>
<li>RESTful API, GraphQL</li>
<li>权限验证: JWT, Auth2</li>
<li>应用 <code>docker</code> 及相关生态</li>
</ul>
<h1 id="版本目标与需求和功能分析"><a href="#版本目标与需求和功能分析" class="headerlink" title="版本目标与需求和功能分析"></a>版本目标与需求和功能分析</h1><p>鉴于需求往往会改变, 而落实完成功能往往会体现在大大小小的版本号上, 所以我将会及时更新目标,功能与需求说明, 最终体现在语义化版本号内容更新中</p>
<p>(注意: 这里确定的版本号与说明文只是文档版本(如 <code>v0.0.0-Luna</code>), 请以各个项目中实际版本的变动信息查询)</p>
<h2 id="整体定位"><a href="#整体定位" class="headerlink" title="整体定位"></a>整体定位</h2><p>包含待办事项, 番茄法计时, 象限分类, 优先级, 计划推荐(关键路径等算法), 自动化, 优势分析 等功能的时间管理应用</p>
<h2 id="v0-0-0-Luna"><a href="#v0-0-0-Luna" class="headerlink" title="v0.0.0-Luna"></a>v0.0.0-Luna</h2><p>基于市面常见<code>TODO</code>应用, 完成待办事项基本功能, 实现基本应用框架, 并尝试完成各个平台部署.</p>
<p><strong>注意</strong>: 此版本需要细心设计, 为未来功能开发作出合适的扩展设计</p>
<h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><p>整体描述:</p>
<ul>
<li>减少或弃用 Dart(Flutter) 投入, 转而使用 JS/TS, HTML, Stylus 等大前端相关技术栈<ul>
<li>虽然使用 Flutter 开发过两三个 App(两个课设,一个实验项目), 但还是不太喜欢 Dart 在 Flutter 上的表现, 由于被禁了反射, 太多事情需要做的非常繁琐了, 比如它的 JSON 序列化, ORM 等, 虽然有 <code>codegen</code> 这个大杀器, 但有时候代码膨胀的厉害, 十分难受, 写起来总感觉有坏味道; 嵌套的多个部件拆分, 多种状态管理还是有点繁琐,当然也有更好的<code>inspector</code>工具了, 总而言之就是我太菜, 且不是很喜欢 Dart 提供的语法罢了(当然这不是主要原因)…</li>
<li>反过来看回所谓大前端圈(主要是 TS 或 ES6 以后的 JS)的生态和方案, 学习成本降低了不少, 主要是我的需求可能不是最性能敏感的, 使用前端技术栈足以应对了. (另外确实想学习一下 TS 了 23333, 毕竟受到 <code>coc.nvim</code> 这个极其优秀的插件受到了极大的鼓舞, 也想写一些插件玩玩了, p.s.好像不是一个领域的东西 233333)</li>
</ul>
</li>
<li>深入学习并应用跨端生成对应代码的技术, 争取最小化代价获得更多的代码复用</li>
</ul>
<h4 id="PC-Linux"><a href="#PC-Linux" class="headerlink" title="PC(Linux)"></a>PC(Linux)</h4><blockquote>
<p><strong>变更(主框架)</strong></p>
<p><strong>弃用</strong>: <code>Flutter Desktop</code> , 原因:</p>
<ul>
<li>不太稳定, 未进入主线支持;</li>
<li>需重度使用的插件不支持(如 <a href="https://pub.flutter-io.cn/packages/sqflite" target="_blank" rel="noopener">sqflite</a> )</li>
</ul>
<p><strong>选用</strong>: <code>Electron</code>, 原因:</p>
<ul>
<li>生态繁荣, 相关插件支持良好</li>
<li>性能够用</li>
<li>配合已有技术栈方便</li>
</ul>
</blockquote>
<p>由<a href="TODO">技术调研</a>中得出的表现, 与实际需求对比, 最终还是还是放弃了 <code>FlutterDesktop</code>, 代价可能是丢掉了原生级别的高性能的用户体验, 但带来不小的开发效率的提升</p>
<h5 id="Databases"><a href="#Databases" class="headerlink" title="Databases"></a>Databases</h5><p>如果需要缓存一些数据的话, 关系型貌似长久持久化支持完善的只有 <code>SQLite</code>, 短期可以存一存文档数据库, 不过需要进一步调研 …</p>
<h4 id="Web-1"><a href="#Web-1" class="headerlink" title="Web"></a>Web</h4><blockquote>
<p><strong>变更简要(主框架):</strong></p>
<p><strong>弃用</strong>: <code>Flutter Web</code> , 原因:</p>
<ul>
<li>需重度使用的插件不支持, 如 <a href="https://pub.flutter-io.cn/packages/sqflite" target="_blank" rel="noopener">sqflite</a></li>
<li>包体积太大, 且有性能有点问题, 见 <a href="https://www.zhihu.com/question/323439136/answer/850516697" target="_blank" rel="noopener">如何评价 Flutter for Web？ - 闲鱼技术的回答 - 知乎</a>;</li>
<li>一些部件(Widget)有渲染问题</li>
</ul>
<p><strong>选用</strong>: <code>Vuetify</code>, 原因:</p>
<ul>
<li>生态繁荣, 相关插件支持良好</li>
<li>性能够用</li>
<li><code>Material Design</code> 支持完善</li>
</ul>
</blockquote>
<h4 id="CLI-nix"><a href="#CLI-nix" class="headerlink" title="CLI(*nix)"></a>CLI(*nix)</h4><blockquote>
<p><strong>等待调研</strong></p>
</blockquote>
<p>方便更喜欢<strong>Keyboard Only</strong>的选手使用, 比如俺 QAQ</p>
<h4 id="Mobile-Android"><a href="#Mobile-Android" class="headerlink" title="Mobile(Android)"></a>Mobile(Android)</h4><blockquote>
<p><strong>暂时停止开发</strong></p>
</blockquote>
<p>不过, 目前仍未找到合适的替代, <code>Flutter</code>仍是我看得到的所有技术中除原生外最好的选择(视时间待定)</p>
<h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><p>终于选中了合适的框架(<code>FastAPI</code>), 看上去非常好, 读了两天文档的直接感受就是作者很贴心和照顾新人, 社区活跃, 底层还算结实. 有完整的鉴权集成(OAuth2/1 with JWT, Basic HTTP Auth…), OpenAPI Schema 与 Swagger 文档生成, 真的吹爆(虽然可能 Swagger 早就出现过了, 可我第一次听说哈哈, 想想实习时和后端扯 API 规范扯来扯去, 当时咋就没遇到这个呢, 有了它就可以, 别 BB,文档 Sever 一直开着, 要啥返回啥自己看, 降低了沟通损耗, 真是赛高~), 与 ASGI 的结合和兼容同步写法的代码, GraphQL 等等一些我还没怎么接触过的东西, 项目驱动学习的感觉不错.</p>
<h4 id="API-Server"><a href="#API-Server" class="headerlink" title="API Server"></a>API Server</h4><blockquote>
<p>变更(主框架)</p>
<p>弃用: <code>Flask RESTFul API Server</code> 相关生态, 原因:</p>
<ul>
<li><a href="https://www.bilibili.com/video/av77591259?p=2" target="_blank" rel="noopener">基于 Flask 的 Web API 开发指南 - PyCon China 2019 上海 李辉</a> 分享的后半部分对相关 RESTFul API 的框架描述, 或见我的<a href="TODO">技术调研</a></li>
</ul>
<p>选用: <code>FastAPI</code>, 原因:</p>
<ul>
<li>开发效率提升(积极的 Type Hint 完美智能补全与自动校验, 提供灵活的方式来依赖注入)</li>
<li>文档写的太好了 QAQ, 太适合学习了</li>
<li>ASGI 看上去挺赞, 并且兼容传统写法</li>
<li>内部使用库 <code>starlette</code> 组织开发了 <code>Django RESTFul Framework</code>, 质量值得信赖</li>
</ul>
<p>备用: <code>Django RESTFul Framework</code></p>
<ul>
<li>仍未实际使用过, 暂时搁置</li>
</ul>
</blockquote>
<h5 id="该版本待实现事项："><a href="#该版本待实现事项：" class="headerlink" title="该版本待实现事项："></a>该版本待实现事项：</h5><ul>
<li style="list-style: none"><input type="checkbox"> 用户鉴权:<ul>
<li style="list-style: none"><input type="checkbox"> 注册</li>
<li style="list-style: none"><input type="checkbox"> 登录</li>
</ul>
</li>
</ul>
<h4 id="Databases-1"><a href="#Databases-1" class="headerlink" title="Databases"></a>Databases</h4><p>暂时没选好, 其实目前也太不需要想, 暂时使用 <code>SQLite</code> 开发就好</p>
<h1 id="总体参考-论文引用"><a href="#总体参考-论文引用" class="headerlink" title="总体参考[论文引用]"></a>总体参考[论文引用]</h1><p><a href="https://s2.sci-hub.org.cn/scholar?start=20&amp;q=%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86+%E6%96%B9%E6%B3%95&amp;hl=zh-TW&amp;as_sdt=0,5" target="_blank" rel="noopener">时间管理 方法 - Sci-Hub文献检索</a></p>
<p><a href="https://psycnet.apa.org/fulltext/1994-39368-001.html" target="_blank" rel="noopener">PsycNET</a></p>
<p><a href="https://en.wikipedia.org/wiki/Time_management" target="_blank" rel="noopener">Time management - Wikipedia</a></p>
<p><a href="https://www.wsj.com/articles/SB109460145618411891" target="_blank" rel="noopener">To-Do Lists Can Take More Time Than Doing, But That Isn’t the Point - WSJ</a></p>
<p><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86" target="_blank" rel="noopener">时间管理 - 维基百科，自由的百科全书</a></p>
<p><a href="https://pennstatelearning.psu.edu/time-management" target="_blank" rel="noopener">Time Management | Penn State Learning</a></p>
<p><a href="https://www.zhihu.com/search?type=content&amp;q=%E5%BE%AE%E6%9C%8D%E5%8A%A1%20%E8%AE%BA%E6%96%87" target="_blank" rel="noopener">微服务 论文 - 搜索结果 - 知乎</a></p>
<p><a href="https://www.showdoc.cc/note?page_id=1390467302230065" target="_blank" rel="noopener">读思码–ShowDoc</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-10293-1017859549.htm" target="_blank" rel="noopener">基于微服务架构的系统设计与开发–《南京邮电大学》2017年硕士论文</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-90024-1012404732.htm" target="_blank" rel="noopener">大学生学习计划管理系统的开发研究–《第二军医大学》2012年硕士论文</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-10497-1013296405.htm" target="_blank" rel="noopener">基于REST架构的web服务技术研究–《武汉理工大学》2013年硕士论文</a></p>
<p><a href="http://yuanjian.cnki.com.cn/cdmd/Search/index" target="_blank" rel="noopener">学位论文搜索结果_远见搜索</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-10532-1014233258.htm" target="_blank" rel="noopener">研究生课余时间管理研究–《湖南大学》2013年硕士论文</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-10004-1014178267.htm" target="_blank" rel="noopener">基于跨平台的移动应用开发框架研究–《北京交通大学》2014年硕士论文</a></p>
<p><a href="http://cdmd.cnki.com.cn/Article/CDMD-10701-1013114286.htm" target="_blank" rel="noopener">面向服务的业务流程建模与验证研究–《西安电子科技大学》2012年博士论文</a></p>
]]></content>
      <categories>
        <category>开发日记</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
  <entry>
    <title>哇塞Python: 作用域与对象引用</title>
    <url>/2019/12/25/wtf-python-scope-and-object-reference/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Python一直以来都因看上去简单易用, 而受到不少人的青睐, 然鹅, 架不住一些历史和设计的原因 存在不少令人抓狂的规则, 让人摸不到头脑.
<a id="more"></a></p>
<p><img src="./wtf_title.png" srcset="/img/loading.gif" alt="wtf"></p>
<blockquote>
<p>来自: <a href="https://twitter.com/laike9m/status/1236846226462523393?s=19" target="_blank" rel="noopener">twitter/laike9m</a></p>
</blockquote>
<p>今天在瞎写自己的<code>tweedle</code>这个CLI工具时, 终于被上图的某个错误理解而导致不断报错, 于是我决定, 重拾基础, 争取通过此文整理好Python中作用域和传递对象引用的相关的坑</p>
<p>一般这种时候没有一个非常友好的inspect方法是不行的, 那么我们需要立刻寻找相关命令行工具和模块?</p>
<p>No~No~No~, 就我以前的开发经历来看, 常常会因解决X而递归的解决一系列路上遇到的问题,最后解决了Y…效率实在不太好, 于是掏出神器 <a href="http://pythontutor.com/" target="_blank" rel="noopener">Python Tutor</a> 来基本观察内部结构变化, 之后再上那些屠龙刀(这个作者看上去一点也Hack啊 = =|||), 具体效果如下图所示(可能有网不太好的同学,体验稍差,可以在此Repo <a href="https://github.com/pgbovine/OnlinePythonTutor" target="_blank" rel="noopener">https://github.com/pgbovine/OnlinePythonTutor</a> 按README指导自行安装部署本地版本哦):</p>
<p><img src="./python_tutor_example.png" srcset="/img/loading.gif" alt="example"></p>
<p>复制以下代码, 自己感受下吧!</p>
<pre><code class="python">g = None
def foo():
    a = 1
    b = 2
    def bar():
        print(b)
        print(g)
        c = 2
    bar()

foo()
</code></pre>
<blockquote>
<p>注意: 未经特殊声明, 代码版本均使用 <code>CPython3.6</code></p>
</blockquote>
<h1 id="作用域-Scopt"><a href="#作用域-Scopt" class="headerlink" title="作用域 (Scopt)"></a>作用域 (Scopt)</h1><p>首先需要明确的一点是, 在函数中访问任何变量, 都会以特定的顺序依次查找不同层次的作用域, 具体规则表现为
LEGB (<strong>L</strong>ocals <strong>E</strong>nclosing <strong>G</strong>lobals <strong>B</strong>uiltins) 这四级命名空间, 其中 L 与 G 都是很好观测到的, 你可以运行以下代码, 在解释器中使用<code>globals()</code>与<code>locals()</code>函数观测:</p>
<pre><code class="python">def current_func_name():
    import inspect
    frame = inspect.currentframe()
    return inspect.getouterframes(frame)[1].function

g = None
def foo():
    a = 1
    b = 2
    print(&#39;\t&#39;,current_func_name(),&#39;(before bar)&#39;,locals()) # 1
    def bar():
        print(b)
        print(g)
        c = 2
        print(&#39;\t&#39;,current_func_name(),locals()) # 2
        print(&#39;\t&#39;,current_func_name(),&#39;g&#39; in globals()) # 3
    bar()
    # print(current_func_name(),globals())
    print(&#39;\t&#39;,current_func_name(),&#39;(after bar)&#39;,locals()) # 4

foo()
# print(&#39;\t&#39;,globals()) or  print(&#39;\t&#39;,locals())
</code></pre>
<p>将会输出(具体地址可能会不一样,这取决于当时的运行时 指 <code>0x7f8c4ffec3a0</code>)</p>
<pre><code>    foo before bar {&#39;a&#39;: 1, &#39;b&#39;: 2}
2
None
    bar {&#39;c&#39;: 2, &#39;b&#39;: 2}
    bar True
    foo after bar {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;bar&#39;: &lt;function foo.&lt;locals&gt;.bar at 0x7f8c4ffec3a0&gt;}
</code></pre><p>这里我们清楚的看到正如一开始的图片上一样的解释的一样</p>
<ul>
<li># 1: <code>a</code>, <code>b</code> 都是放在了 <code>Locals</code> 这个地方, 这时还未知下面的闭包函数</li>
<li># 2: <code>c</code> 也按照期望进入了 <code>Locals</code>, 而 <code>b</code> 此时将作为 bar() 这个函数的自由变量函数而进入 <code>Locals</code></li>
<li># 3: 也按照期望观察到 <code>g</code> 确实存在于 <code>Globals</code> 而不传递进入任何 <code>Locals</code> 中</li>
<li># 4: <code>c</code> 不再存在于 <code>Locals</code> 作用域, 而bar这个函数作为一等公民进入foo的 <code>Locals</code></li>
</ul>
<p>看完这些, 你可能感觉到, 啊哼, 也没有什么不符合直觉的地方吗? 这有什么会坑的地方吗? 而且这个<code>Enclosing</code>, <code>Builtins</code>也没说啊?</p>
<p>事实上, 好戏才刚刚开始… 观察以下代码, 觉得会输出什么</p>
<pre><code class="python">def foo():
    res = []
    def bar():
        print(b)
    for b in range(3):
        res.append(bar)
    return res

for f in foo():
    f()
</code></pre>
<p>也许你会觉得这会报错, 因为很反直觉, 竟然<code>bar</code>函数可以引用一个之前没有 “声明/定义” 的变量, 如果你很是好奇, 将代码复制到解释器执行的话, 你会发现解释器没有任何怨言:</p>
<pre><code>2
2
2
</code></pre><p>WTF, 这发生了什么? (可以尝试使用 Python Tutor 观测)
这里我截取重要的两个节点:</p>
<ul>
<li><p>第一次进入 <code>print(f())</code>之前
<img src="./example1.png" srcset="/img/loading.gif" alt></p>
</li>
<li><p>第二次进入 <code>print(f())</code>之前
<img src="./example2.png" srcset="/img/loading.gif" alt>
可以观测到 f1:foo 的 栈帧中 相对 <code>bar</code>函数来说 <code>b</code>这个自由变量(enclosing cell var)的值就已经变为了最终值 2 了, 所以即使再次运行也只会是最终结果了, 这里这个闭包函数被延后求值了.</p>
</li>
</ul>
<p>你可能还会有疑问, 为啥再之前 <code>print(b)</code> 不会导致解释器报错, 因为如果在解释器中随便输出一个”未声明”的值之前都会收到类似 <code>NameError: name &#39;a&#39; is not defined</code>的错误, 这就回到了我们最初所说的寻找顺序规则的问题, 当然在上面的情况下,发生了 L(Not Hit) -&gt; E(Hit) 的情况, 注意顺序寻找规则就能观察这些奇怪问题并排错了…</p>
<p>问题又来了, 这个情况该如何解决呢, 可以复制解决(这里又有一个小坑, Python中的<code>=</code>仅仅是名字绑定, 它的所谓变量并不是盒子, 仅仅通过局部期望通过<code>=</code>复制一个值, 是不会成功的, 这对从C/C++转来学习的同学很有帮助, 硬要说的话, 它更类似指针, 当然也不全是如此)</p>
<pre><code class="python">def foo():
    res = []
    for b in range(3):
        def bar(o=b):
            print(o)
        res.append(bar)
    return res

for f in foo():
    f()
</code></pre>
<p>或者调整为纯函数</p>
<pre><code class="python">def foo():
    res = []
    def bar(o):
        print(o)
    for b in range(3):
        res.append(bar(b))
    return res

for f in foo():
    print(f())
</code></pre>
<p>言而总之, 这样直接的代码可能不太常见和实用, 但当你写代码写飘了的时候, 有可能会不小心导致这个情况发生.建议函数尽量设计为不依赖自由变量的纯函数.</p>
<p>闭包可以很好的封装状态, 压缩参数列表, 不过隐式依赖自由变量, 会使得测试和维护变得困难, 所以, 对于过多参数的函数. 可以使用<code>functools.partial</code>函数压缩过多参数绑定, 或者使用 <code>callable object</code> 去实现</p>
<h1 id="传递对象引用-pass-object"><a href="#传递对象引用-pass-object" class="headerlink" title="传递对象引用 (pass object)"></a>传递对象引用 (pass object)</h1><p>接下来讨论一个参数传递的问题, 对一些来自 C/C++ 背景的爱好者们, 基本上来说, 对传递参数, 有按值传递(pass by value) 与 按引用/指针传递 (pass by ref/point), 而在Python中, 整体上更像第二种, 但却有些不同, 或者叫做按引用值传递(pass ref by value)?.</p>
<p>Python中函数得到的是参数的副本, 对其重新绑定对外面没有任何影响, 但参数始终是引用(即名字绑定), 按照不同的名字在绑定的作用域中寻找对象并修改.</p>
<ul>
<li>如果参数引用名字类型为可变, 那么可变对象内部可以修改, 对象底层标志不变</li>
<li>如果参数引用名字类型为不可变, 如 <code>int</code>, <code>float</code>, <code>complex</code> 等, 内部也不可修改, 只会发生重新 bind, 底层标志也不变
比如, 我一开始会写出这样的代码,去交换两个值:</li>
</ul>
<pre><code class="python">def swap(a,b):
    print(f&#39;swap before:\t a:{a}, b:{b}&#39;)
    t = a
    a = b
    b = t
    print(f&#39;swap after:\t a:{a}, b:{b}&#39;)

a = 1
b = 3
print(f&#39;before:\t a:{a}, b:{b}&#39;)
swap(a,b)
print(f&#39;after:\t a:{a}, b:{b}&#39;)
</code></pre>
<p>当时很不明白为何无法修改</p>
<pre><code>before:     a:1, b:3
swap before:     a:1, b:3
swap after:     a:3, b:1
after:     a:1, b:3
</code></pre><p>即使通过查看id</p>
<pre><code class="python">def swap(a,b):
    print(f&#39;swap before:\t a:{a} id:{id(a)}, b:{b}, id:{id(b)}&#39;)
    t = a
    a = b
    b = t
    print(f&#39;swap after:\t a:{a} id:{id(a)}, b:{b}, id:{id(b)}&#39;)

a = 1
b = 3
print(f&#39;before:\t a:{a} id:{id(a)}, b:{b}, id:{id(b)}&#39;)
swap(a,b)
print(f&#39;after:\t a:{a} id:{id(a)}, b:{b}, id:{id(b)}&#39;)
</code></pre>
<p>也没有看到确切变化</p>
<pre><code>before:     a:1 id:94304221255424, b:3, id:94304221255488
swap before:     a:1 id:94304221255424, b:3, id:94304221255488
swap after:     a:3 id:94304221255488, b:1, id:94304221255424
after:     a:1 id:94304221255424, b:3, id:94304221255488
</code></pre><p>这里我以 Python Tutor 作验证:
<img src="./example_1-1.png" srcset="/img/loading.gif" alt>
<img src="./example_1-2.png" srcset="/img/loading.gif" alt>
观察这两张图我发现, 在离开<code>swap</code>之后, 内部的<code>a</code>,<code>b</code>绑定不再存在, 一切恢复了原样, 这是在开玩笑吗?</p>
<p>其实不是这里<code>a</code>,<code>b</code>发生的id改变, 仅仅是名字本身的变化, 而不是底层那个 <code>int</code>类型 的 object 发生改变, 这个对象还在原来的地方,被外层的<code>a</code>,<code>b</code>绑定着, 这也解释了为何调用<code>swap</code>不符合预期, 在<code>swap</code>内部, 由于之前提到的规则, 先于在 Locals 找到了符合的名字, 之后修改的全是这个层面的值, 而无关外部不可变的<code>a</code>,<code>b</code>状态.</p>
<p>至于进一步的解释, 我也查询了许多资料, 由于不看源码的话, 感觉全是魔法, 日后有时间研究底层实现, 会再来更新的!</p>
<p>写到这里, 这篇文章就差不多了, 希望可以帮助到你 <code>^_^</code></p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料:"></a>参考资料:</h1><blockquote>
<p>Python3.6 文档 Data Model</p>
<p>《Python3学习笔记》 雨痕</p>
<p>《流畅的Python》Luciano Ramalho</p>
<p><a href="https://stackoverflow.com/questions/8056130/immutable-vs-mutable-types" target="_blank" rel="noopener">https://stackoverflow.com/questions/8056130/immutable-vs-mutable-types</a></p>
<p><a href="https://www.zhihu.com/search?type=content&amp;q=python%20%E5%AF%B9%E8%B1%A1%E4%BC%A0%E9%80%92" target="_blank" rel="noopener">https://www.zhihu.com/search?type=content&amp;q=python%20%E5%AF%B9%E8%B1%A1%E4%BC%A0%E9%80%92</a></p>
<p><a href="https://yuyang0.github.io/articles/defects-of-python.html" target="_blank" rel="noopener">https://yuyang0.github.io/articles/defects-of-python.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>阅读笔记</category>
      </categories>
      <tags>
        <tag>Python3</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>少年, 带上coc.nvim, 在 (Neo)Vim 的世界中尽情翱翔吧!</title>
    <url>/2019/12/25/fly-with-coc-nvim-in-neovim-world/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>标题略显中二, 请自行脑补为这是一篇介绍<code>coc.nvim</code>的文章,正如其官网所说,给你以VSCode一般的优秀体验,甚至对于Vimer来讲,这是一款极其优秀,反应很快的值得尝试的插件.
<a id="more"></a></p>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面:"></a>写在前面:</h1><p>阅读本篇文章,请至少阅读完Vimtutor,并对插件系统有一定的了解,或多或少的尝试过为你的(Neo)Vim安装过插件,如果你体验过其他老牌的补全插件,并为之苦恼,最终可能直接放弃使用,转投IDEs或Emacs了,至少对于新手而言, Vim实在不是那么友好(想起了这个 问题==SOF:如何退出Vim==)不过这一款出自国人大佬==赵启明==之手的优秀插件足以使你重新拾起(Neo)Vim,在不需要放弃Vim高效的操作模式,享受编程的快感.</p>
<h2 id="这里是一些给老手们的参考资料"><a href="#这里是一些给老手们的参考资料" class="headerlink" title="这里是一些给老手们的参考资料"></a>这里是一些给老手们的参考资料</h2><ul>
<li>强烈建议浏览一下该项目的Github主页, 以及部分Wiki内容, 因为文档足够优秀,即使你不看这篇文章也可以找到大部分解决办法,这也是必备的技能之一.如果你还是一头雾水,那么可以浏览一下本文,找到你期待的内容,如果没有的话,请联系我,我也希望可以与你共同进步,一起完善这个很优秀的开源项目.</li>
<li>这篇文章中不会介绍如何安装, 如何配置(Neo)Vim的<code>.vimrc/init.vim</code>,这些内容大佬的README中已经介绍的足够完备,本篇文章作为一个补充以及一些没有直接体现在Wiki中的经验.</li>
</ul>
<blockquote>
<p><a href="https://github.com/neoclide/coc.nvim" target="_blank" rel="noopener">coc.nvim</a> 是一个非常 nice 的(Neo)Vim 的插件，提供 <a href="https://microsoft.github.io/language-server-protocol/specifications/specification-3-14/" target="_blank" rel="noopener">LSP</a> 全功能支持，除了 Debug，补全，跳转，重构，文档等都有不同程度的支持(看相应的 language server (如 C++的 ccls ， Java 的 eclipse.jdt.ls )是否提供…)</p>
</blockquote>
<h1 id="对一些LSP的使用建议"><a href="#对一些LSP的使用建议" class="headerlink" title="对一些LSP的使用建议"></a>对一些LSP的使用建议</h1><p>如:</p>
<ul>
<li>学习查看LS的Debug信息,排查问题原因</li>
</ul>
<h1 id="配置管理-模块化"><a href="#配置管理-模块化" class="headerlink" title="配置管理: 模块化"></a>配置管理: 模块化</h1><p>如何模块化你的配置文件呢,这一主题,你可以在我自己的模块配置<a href="https://github.com/StrayDragon/Mine0Vim" target="_blank" rel="noopener">StrayDragon/Mine0Vim</a> 中找到相关配置或者灵感.</p>
<h1 id="Q-amp-A-使用-coc-nvim-遇到的一些问题"><a href="#Q-amp-A-使用-coc-nvim-遇到的一些问题" class="headerlink" title="Q&amp;A: 使用 coc.nvim 遇到的一些问题"></a>Q&amp;A: 使用 coc.nvim 遇到的一些问题</h1><p>看一看 <a href="https://vimawesome.com/" target="_blank" rel="noopener">AwesomeVim</a> 这里面无数的插件们的更新日期, 能积极活跃的老牌插件真的不多,这一节会向你展示我的一些推荐,以及经典插件的coc插件替代品</p>
<ul>
<li>记录使用 <code>coc.nvim</code> 的过程中发现的问题与解决办法, 将在之后整理成为入门教程(==待定==)<blockquote>
<p>由于 <code>coc.nvim</code> 并不会主动添加快捷键, 跟随官网的配置设置后也并不能涵盖有的需求, 接下来会以我的实际使用经历逐步完善…</p>
</blockquote>
</li>
</ul>
<h2 id="悬浮窗口显示-也就是Hover-滚动文档窗口"><a href="#悬浮窗口显示-也就是Hover-滚动文档窗口" class="headerlink" title="悬浮窗口显示(也就是Hover)滚动文档窗口"></a>悬浮窗口显示(也就是<code>Hover</code>)滚动文档窗口</h2><blockquote>
<p>用于解决有的 doc 太长无法,只能看到部分的问题.
注意: 目前该特性是 Neovim Only 的</p>
</blockquote>
<ul>
<li>查看相关文档说明:</li>
</ul>
<pre><code>:h coc#util#has_float()
:h coc#util#float_scroll()
</code></pre><ul>
<li>添加快捷映射</li>
</ul>
<pre><code class="vimscript">&quot;在Hover调出之后使用
&quot;  Ctrl + f 文档翻页, 光标仍在原来文件
nnoremap &lt;expr&gt;&lt;C-f&gt; coc#util#has_float() ? coc#util#float_scroll(1) : &quot;\&lt;C-f&gt;&quot;
&quot;在Hover调出之后使用
&quot;  Ctrl + k 光标进入悬浮窗口, 此时hjkl可在文档内移动,在此使用该快捷键跳出
nnoremap &lt;expr&gt;&lt;C-k&gt; coc#util#has_float() ? coc#util#float_scroll(0) : &quot;\&lt;C-k&gt;&quot;
</code></pre>
<ul>
<li>参考:<blockquote>
<p><a href="https://github.com/neoclide/coc.nvim/issues/609" target="_blank" rel="noopener">https://github.com/neoclide/coc.nvim/issues/609</a></p>
</blockquote>
</li>
</ul>
<h2 id="修改基于使用-clang-format-格式化代码的样式"><a href="#修改基于使用-clang-format-格式化代码的样式" class="headerlink" title="修改基于使用 clang-format 格式化代码的样式"></a>修改基于使用 <code>clang-format</code> 格式化代码的样式</h2><blockquote>
<p>用于解决使用 coc.nvim 作为 LSP 框架的找了老半天无法修改默认 Format 样式的问题</p>
</blockquote>
<ul>
<li><p>在代码所在项目根目录中加入 <code>.clang-format</code>， 这样如 <code>clangd</code>, <code>ccls</code>这些 LS 就会使用调用 <code>clang-format</code> 载入配置文件进行格式化了.</p>
</li>
<li><p>我喜欢的一套代码风格，只不过把缩进改为 2 空格了</p>
</li>
</ul>
<pre><code># .clang-format
---
Language:        Cpp
BasedOnStyle:  Chromium
TabWidth:        2
UseTab:          Never
...

</code></pre>]]></content>
      <categories>
        <category>插件与扩展</category>
      </categories>
      <tags>
        <tag>Vim</tag>
        <tag>NeoVim</tag>
      </tags>
  </entry>
  <entry>
    <title>折腾记: 如何在 iPad 上舒服地码代码呢?</title>
    <url>/2019/12/23/coding-on-ipad/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>我想有一个可以临时写写简单的代码，最好提供本地编译器，有什么选择吗？
为啥没有一个好用的C编译器呢?
VSCode online 没有出现
code-server是个不错的替代
VScode online 的iPad Safari支持被提上日程，敬请期待
在体验过一系列 App Store 上各种代码编辑器后， </p>
</blockquote>
<blockquote>
<p>你能找到可以用的工具:</p>
<ul>
<li>现有的编译器/解释器: <code>python2 (2.7)</code>, <code>python3 (3.6,3.7)</code> ,<code>lua</code>, <code>javascript (node.js)</code>, <code>c (clang/lli)</code>,</li>
<li>扩展的库，框架<code>react</code>, <code>react-native</code>, <code>pure python package (use StaSh)</code></li>
</ul>
</blockquote>
<h2 id="其他辅助应用"><a href="#其他辅助应用" class="headerlink" title="其他辅助应用"></a>其他辅助应用</h2><h3 id="看文档"><a href="#看文档" class="headerlink" title="看文档"></a>看文档</h3><h4 id="Dash"><a href="#Dash" class="headerlink" title="Dash"></a><code>Dash</code></h4><ul>
<li>检索</li>
</ul>
<h4 id="Alook-浏览器-¥"><a href="#Alook-浏览器-¥" class="headerlink" title="Alook 浏览器 (¥)"></a><code>Alook 浏览器</code> (¥)</h4><ul>
<li>夜间模式</li>
</ul>
<h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><h4 id="MWeb"><a href="#MWeb" class="headerlink" title="MWeb"></a>MWeb</h4><h4 id="MarkDown"><a href="#MarkDown" class="headerlink" title="MarkDown"></a>MarkDown</h4><h2 id="“编译器之神”-的弟弟与-“神之编译器”-的弟弟"><a href="#“编译器之神”-的弟弟与-“神之编译器”-的弟弟" class="headerlink" title="“编译器之神” 的弟弟与 “神之编译器” 的弟弟"></a>“编译器之神” 的弟弟与 “神之编译器” 的弟弟</h2><h3 id="iVim-vim-port"><a href="#iVim-vim-port" class="headerlink" title="iVim (vim port)"></a>iVim (vim port)</h3><h4 id="了解目前版本的限制"><a href="#了解目前版本的限制" class="headerlink" title="了解目前版本的限制"></a>了解目前版本的限制</h4><h4 id="搭配应用-强烈建议"><a href="#搭配应用-强烈建议" class="headerlink" title="搭配应用(强烈建议)"></a>搭配应用(强烈建议)</h4><p>LibTerm</p>
<h4 id="基本配置-vimrc"><a href="#基本配置-vimrc" class="headerlink" title="基本配置.vimrc"></a>基本配置<code>.vimrc</code></h4><h4 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h4><ul>
<li><code>pathogen</code></li>
</ul>
<h4 id="快捷键记录与管理"><a href="#快捷键记录与管理" class="headerlink" title="快捷键记录与管理"></a>快捷键记录与管理</h4><ul>
<li><code>vim-which-key</code></li>
</ul>
<h4 id="“显示加强”-插件"><a href="#“显示加强”-插件" class="headerlink" title="“显示加强” 插件"></a>“显示加强” 插件</h4><h5 id="文件树与最近文件"><a href="#文件树与最近文件" class="headerlink" title="文件树与最近文件"></a>文件树与最近文件</h5><ul>
<li><code>nerdtree</code></li>
</ul>
<h5 id="状态栏美化"><a href="#状态栏美化" class="headerlink" title="状态栏美化"></a>状态栏美化</h5><ul>
<li><code>vim-airline</code></li>
<li><code>vim-airline-theme</code></li>
</ul>
<h5 id="开始界面"><a href="#开始界面" class="headerlink" title="开始界面"></a>开始界面</h5><ul>
<li><code>vim-startify</code></li>
</ul>
<h5 id="下划线高亮光标所在词"><a href="#下划线高亮光标所在词" class="headerlink" title="下划线高亮光标所在词"></a>下划线高亮光标所在词</h5><ul>
<li><code>vim-cursorword</code></li>
</ul>
<h5 id="缩进线"><a href="#缩进线" class="headerlink" title="缩进线"></a>缩进线</h5><ul>
<li><code>indentLine</code></li>
</ul>
<h5 id="代码结构-暂时无法正常工作"><a href="#代码结构-暂时无法正常工作" class="headerlink" title="代码结构(暂时无法正常工作)"></a>代码结构(暂时无法正常工作)</h5><ul>
<li><code>taglist</code></li>
</ul>
<h4 id="“编辑加强”-插件"><a href="#“编辑加强”-插件" class="headerlink" title="“编辑加强” 插件"></a>“编辑加强” 插件</h4><h5 id="自动补全支持与代码片段"><a href="#自动补全支持与代码片段" class="headerlink" title="自动补全支持与代码片段"></a>自动补全支持与代码片段</h5><ul>
<li><code>vim-easycomplete</code> (推荐)</li>
<li><code>code_complete</code> (精小版/简陋版)</li>
</ul>
<h5 id="成对输出字符"><a href="#成对输出字符" class="headerlink" title="成对输出字符"></a>成对输出字符</h5><ul>
<li><code>auto-pairs</code></li>
</ul>
<h5 id="快速注释"><a href="#快速注释" class="headerlink" title="快速注释"></a>快速注释</h5><ul>
<li><code>nerdcommenter</code></li>
</ul>
<h5 id="转换名字"><a href="#转换名字" class="headerlink" title="转换名字"></a>转换名字</h5><ul>
<li><code>vim-abolish</code></li>
</ul>
<h5 id="快速移动"><a href="#快速移动" class="headerlink" title="快速移动"></a>快速移动</h5><ul>
<li><code>vim-easymotion</code></li>
</ul>
<h5 id="快速对齐"><a href="#快速对齐" class="headerlink" title="快速对齐"></a>快速对齐</h5><ul>
<li><code>vim-easy-align</code></li>
</ul>
<h3 id="Not-Emacs-emacs-port-年久失修"><a href="#Not-Emacs-emacs-port-年久失修" class="headerlink" title="Not Emacs (emacs port) ==年久失修=="></a>Not Emacs (emacs port) ==年久失修==</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h2 id="使用差强人意的免费代码编辑器"><a href="#使用差强人意的免费代码编辑器" class="headerlink" title="使用差强人意的免费代码编辑器"></a>使用差强人意的免费代码编辑器</h2><h3 id="Koder"><a href="#Koder" class="headerlink" title="Koder"></a>Koder</h3><h3 id="Kodex"><a href="#Kodex" class="headerlink" title="Kodex"></a>Kodex</h3><h2 id="有点贵的高级代码编辑器"><a href="#有点贵的高级代码编辑器" class="headerlink" title="有点贵的高级代码编辑器"></a>有点贵的高级代码编辑器</h2><h3 id="Textastic-Code-Editor-（¥）"><a href="#Textastic-Code-Editor-（¥）" class="headerlink" title="Textastic Code Editor （¥）"></a>Textastic Code Editor （¥）</h3><h3 id="GoCoEdit-¥"><a href="#GoCoEdit-¥" class="headerlink" title="GoCoEdit (¥)"></a>GoCoEdit (¥)</h3><h3 id="Buffer-Editor-¥"><a href="#Buffer-Editor-¥" class="headerlink" title="Buffer Editor (¥)"></a>Buffer Editor (¥)</h3><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><h2 id="使用针对特定语言的-IDE-lite"><a href="#使用针对特定语言的-IDE-lite" class="headerlink" title="使用针对特定语言的 IDE lite"></a>使用针对特定语言的 IDE lite</h2><h3 id="Pythonista-Python2-7-amp-3-6-¥"><a href="#Pythonista-Python2-7-amp-3-6-¥" class="headerlink" title="Pythonista (Python2.7&amp;3.6) (¥)"></a>Pythonista (<code>Python2.7&amp;3.6</code>) (¥)</h3><h3 id="play-js-JavaScript-Node-js-React-React-Native-¥"><a href="#play-js-JavaScript-Node-js-React-React-Native-¥" class="headerlink" title="play.js (JavaScript,Node.js,React,React Native) (¥)"></a>play.js (<code>JavaScript</code>,<code>Node.js</code>,<code>React</code>,<code>React Native</code>) (¥)</h3><h3 id="Mobile-C-C-C-11-JavaScript-Python3-7-Lua-可选¥"><a href="#Mobile-C-C-C-11-JavaScript-Python3-7-Lua-可选¥" class="headerlink" title="Mobile C (C,C++11,JavaScript,Python3.7,Lua)(可选¥)"></a>Mobile C (<code>C</code>,<code>C++11</code>,<code>JavaScript</code>,<code>Python3.7</code>,<code>Lua</code>)(可选¥)</h3><h3 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h3><h2 id="使用-ODE"><a href="#使用-ODE" class="headerlink" title="使用 ODE"></a>使用 ODE</h2><p>依赖网络啦
土豪自建服务器
此处可以有一个排行榜
Leetcode playground
Repl.it </p>
<h3 id="搭建CodeServer-Unofficial-version-of-VS-Code"><a href="#搭建CodeServer-Unofficial-version-of-VS-Code" class="headerlink" title="搭建CodeServer (Unofficial version of VS Code)"></a>搭建CodeServer (Unofficial version of VS Code)</h3><h3 id="搭建MS-VS-online-本地服务"><a href="#搭建MS-VS-online-本地服务" class="headerlink" title="搭建MS VS online 本地服务"></a>搭建MS VS online 本地服务</h3><h3 id="特定语言的Playground"><a href="#特定语言的Playground" class="headerlink" title="特定语言的Playground"></a>特定语言的Playground</h3><h4 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h4><h4 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h4><h3 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h3><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2>]]></content>
      <categories>
        <category>未归档</category>
      </categories>
      <tags>
        <tag>iPad</tag>
      </tags>
  </entry>
  <entry>
    <title>优秀的技术博客应该是怎样的?</title>
    <url>/2019/12/09/what-is-a-good-tech-blog/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>当初将这个静态博客部署到 Github Page 的时候就在思考这几个问题: 我为何需要一个博客? 需要用多大的动力和精力去维护它? 如何写一篇不错的文章并坚持写作的习惯呢? 截止到写这篇文章之时, 我发现大多数之前所想的都没能做到做好, 真是个不知不扣的拖延症患者…</p>
<p>一直以来, 自己在搜索问题的时候, 也会经常遇到一些个人的博客, 有的内容干货满满, 而有的内容十分凌乱, 很难找到实际有用的信息,而经过了这段日子的学习与实践, 越发觉得自己好像只是一个旁观者, 一个输入者, 接受者来自互联网时代的信息轰炸, 久而久之,总感觉在随波逐流, 缺少自己的见解, 也经常在交流和思考时遇到瓶颈, 为了尽可能补救我的表达能力, 写作能力, 以进一步提升学习与思考能力, 我决定用心的写下这篇文章, 为之后文章分享提供一个轮廓和方向!</p>
<a id="more"></a>
<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><h1 id="应该有些什么内容"><a href="#应该有些什么内容" class="headerlink" title="应该有些什么内容"></a>应该有些什么内容</h1><blockquote>
<p>自己的所思、所学、所想及遇到的技术问题</p>
</blockquote>
<ul>
<li>介绍</li>
<li>项目总结</li>
<li>某些框架/库的分析剖析笔记</li>
<li>一些刷题网站的刷题笔记和记录</li>
<li>自己阅读计算机书籍的阅读笔记</li>
<li>… (待补充)</li>
</ul>
<h1 id="不该或尽可能少有些什么内容"><a href="#不该或尽可能少有些什么内容" class="headerlink" title="不该或尽可能少有些什么内容"></a>不该或尽可能少有些什么内容</h1><ul>
<li><code>Hello world</code> 级别的内容</li>
<li>摘抄各大开源软件的配置安装教程</li>
<li>… (待补充)</li>
</ul>
<h1 id="值得学习的博客"><a href="#值得学习的博客" class="headerlink" title="值得学习的博客"></a>值得学习的博客</h1><p><a href="https://www.kawabangga.com/" target="_blank" rel="noopener">卡瓦邦噶！ – laixintao 的 blog</a></p>
<h1 id="参考来源与后记"><a href="#参考来源与后记" class="headerlink" title="参考来源与后记"></a>参考来源与后记</h1><blockquote>
<p><a href="https://www.zhihu.com/question/19934502" target="_blank" rel="noopener">优秀程序员的博客有哪些？ - 知乎</a></p>
</blockquote>
]]></content>
      <categories>
        <category>个人积累</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>&quot;这个 setup.py 是什么?&quot;</title>
    <url>/2019/02/08/what-is-the-setup-dot-py/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>如果你曾经浏览过某些 Python 模块的源码,
你会发现一般都会有一个名为<strong>setup.py</strong>的文件,那么这个文件是干啥的呢?</p>
</blockquote>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><ul>
<li>最近,正在构思自己的命令行脚手架工具 <strong><code>dragon-cli</code></strong> 时遇到了这个问题,在学习使用 <a href="https://click.palletsprojects.com/en/7.x/" target="_blank" rel="noopener">click</a> 模块(一个好用方便的建立命令行工具的框架) 的<a href="https://www.youtube.com/watch?v=kNke39OZ2k0" target="_blank" rel="noopener">教程</a>中有一个配置<strong>setup.py</strong>的过程,我才发现一直对这个玩意熟视无睹,并且不明所以,在探索使用的过程,总结此文,方便以后查阅 O(∩_∩)O~</li>
</ul>
<a id="more"></a>
<h1 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h1><ul>
<li><p>简单来说,这个 <strong>setup.py</strong> 是用来帮助使用者安装 模块(Module)/包(Package) 的构建脚本.就像<code>pip</code>, <code>easy_install</code>, … 做的那样 (!它们也是遵循着目标库中的 <strong>setup.py</strong> 而完成的安装).</p>
</li>
<li><p>在每个<strong>setup.py</strong>文件中,都可以看到其导入了 setuptools 这个包,并且从入口函数 <code>setup(...)</code> 传入配置参数, 看上去像这样:</p>
</li>
</ul>
<pre><code class="python">from setuptools import setup

setup(
    # 包名称
    name=&#39;foo&#39;,
    # 包版本
    version=&#39;1.0&#39;,
    # 需要打包的 Python 单文件列表
    py_modules=[&#39;foo&#39;],
    # 安装时需要安装的依赖包
    install_requires=[
        &#39;bar&#39;,
    ],
    # ...
)
</code></pre>
<ul>
<li>通常可以在包源码根目录使用以下命令安装 (<strong>注意 Python 的版本,推荐虚拟环境安装</strong>)</li>
</ul>
<pre><code class="bash">python setup.py install
</code></pre>
<ul>
<li><p>这样,对于库的用户来讲,并不太需要关注这个脚本干了些什么,如果没有安装失败,一切就安好.</p>
<ul>
<li>其实它是把该库安装到目标环境(包括虚拟环境)的 <strong>site-packages/</strong> 目录下.</li>
</ul>
</li>
<li><p>不过,当我们从库用户转变为库作者,或者两者兼有时,那么明白其中的原理就成为解决问题的重要出路了.</p>
</li>
</ul>
<h1 id="setup-接受参数"><a href="#setup-接受参数" class="headerlink" title="setup 接受参数"></a>setup 接受参数</h1><blockquote>
<p>Some values are treated as simple strings, some allow more logic.</p>
<p>Type names used below:</p>
<ul>
<li><code>str</code> - simple string</li>
<li><code>list-comma</code> - dangling list or string of comma-separated values</li>
<li><code>list-semi</code> - dangling list or string of semicolon-separated values</li>
<li><code>bool</code> - <code>True</code> is 1, yes, true</li>
<li><code>dict</code> - list-comma where keys are separated from values by <code>=</code></li>
<li><code>section</code> - values are read from a dedicated (sub)section</li>
</ul>
<p>Special directives:</p>
<ul>
<li><code>attr:</code> - Value is read from a module attribute. <code>attr:</code> supports callables and iterables; unsupported types are cast using <code>str()</code>.</li>
<li><code>file:</code> - Value is read from a list of files and then concatenated</li>
</ul>
</blockquote>
<ul>
<li>元信息 (MetaData)</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">指定参数</th>
<th style="text-align:center">指定参数(别名)</th>
<th style="text-align:center">接收类型</th>
<th style="text-align:center">最低版本</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">包名称</td>
<td style="text-align:center">name</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">包版本</td>
<td style="text-align:center">version</td>
<td style="text-align:center"></td>
<td style="text-align:center">attr:, file:, str</td>
<td style="text-align:center">39.2.0</td>
</tr>
<tr>
<td style="text-align:center">包官网主页</td>
<td style="text-align:center">url</td>
<td style="text-align:center">home-page</td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">download_url</td>
<td style="text-align:center">download-url</td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">项目主页</td>
<td style="text-align:center">project_urls</td>
<td style="text-align:center"></td>
<td style="text-align:center">dict</td>
<td style="text-align:center">38.3.0</td>
</tr>
<tr>
<td style="text-align:center">作者</td>
<td style="text-align:center">author</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">作者的邮箱地址</td>
<td style="text-align:center">author_email</td>
<td style="text-align:center">author-email</td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">维护者</td>
<td style="text-align:center">maintainer</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">维护者的邮箱地址</td>
<td style="text-align:center">maintainer_email</td>
<td style="text-align:center">maintainer-email</td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">所属分类列表</td>
<td style="text-align:center">classifiers</td>
<td style="text-align:center">classifier</td>
<td style="text-align:center">file:, list-comma</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">授权信息</td>
<td style="text-align:center">license</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">license_file</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">简单描述</td>
<td style="text-align:center">description</td>
<td style="text-align:center">summary</td>
<td style="text-align:center">file:, str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">详细描述</td>
<td style="text-align:center">long_description</td>
<td style="text-align:center">long-description</td>
<td style="text-align:center">file:, str</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">long_description_content_type</td>
<td style="text-align:center"></td>
<td style="text-align:center">str</td>
<td style="text-align:center">38.6.0</td>
</tr>
<tr>
<td style="text-align:center">关键字列表</td>
<td style="text-align:center">keywords</td>
<td style="text-align:center"></td>
<td style="text-align:center">list-comma</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">适用的软件平台列表</td>
<td style="text-align:center">platforms</td>
<td style="text-align:center">platform</td>
<td style="text-align:center">list-comma</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">指定可以为哪些模块提供依赖</td>
<td style="text-align:center">provides</td>
<td style="text-align:center"></td>
<td style="text-align:center">list-comma</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">指定依赖的其他包</td>
<td style="text-align:center">requires</td>
<td style="text-align:center"></td>
<td style="text-align:center">list-comma</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">obsoletes</td>
<td style="text-align:center"></td>
<td style="text-align:center">list-comma</td>
</tr>
</tbody>
</table>
<ul>
<li>选项(Option)</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">说明</th>
<th style="text-align:center">指定参数</th>
<th style="text-align:center">接收类型</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">不压缩包，而是以目录的形式安装</td>
<td style="text-align:center">zip_safe</td>
<td style="text-align:center">bool</td>
</tr>
<tr>
<td style="text-align:center">指定运行 setup.py 文件本身所依赖的包</td>
<td style="text-align:center">setup_requires</td>
<td style="text-align:center">list-semi</td>
</tr>
<tr>
<td style="text-align:center">安装时需要安装的依赖包</td>
<td style="text-align:center">install_requires</td>
<td style="text-align:center">list-semi</td>
</tr>
<tr>
<td style="text-align:center">当前包的高级/额外特性需要依赖的分发包</td>
<td style="text-align:center">extras_require</td>
<td style="text-align:center">section</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">python_requires</td>
<td style="text-align:center">str</td>
</tr>
<tr>
<td style="text-align:center">动态发现服务和插件 ==TODO==</td>
<td style="text-align:center">entry_points</td>
<td style="text-align:center">file:, section</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">use_2to3</td>
<td style="text-align:center">bool</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">use_2to3_fixers</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">use_2to3_exclude_fixers</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">convert_2to3_doctests</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center">指定可执行脚本,安装时脚本会被安装到系统 PATH 路径下</td>
<td style="text-align:center">scripts</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">eager_resources</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">dependency_links</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">tests_require</td>
<td style="text-align:center">list-semi</td>
</tr>
<tr>
<td style="text-align:center">自动包含包内所有受版本控制(cvs/svn/git)的数据文件</td>
<td style="text-align:center">include_package_data</td>
<td style="text-align:center">bool</td>
</tr>
<tr>
<td style="text-align:center">需要处理的包目录(通常为包含  <code>__init__.py</code>  的文件夹)</td>
<td style="text-align:center">packages</td>
<td style="text-align:center">find:, find_namespace:, list-comma</td>
</tr>
<tr>
<td style="text-align:center">指定哪些目录下的文件被映射到哪个源码包</td>
<td style="text-align:center">package_dir</td>
<td style="text-align:center">dict</td>
</tr>
<tr>
<td style="text-align:center">指定包内需要包含的数据文件</td>
<td style="text-align:center">package_data</td>
<td style="text-align:center">section</td>
</tr>
<tr>
<td style="text-align:center">当 include_package_data 为 True 时该选项用于排除部分文件</td>
<td style="text-align:center">exclude_package_data</td>
<td style="text-align:center">section</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">namespace_packages</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center">需要打包的 Python 单文件列表</td>
<td style="text-align:center">py_modules</td>
<td style="text-align:center">list-comma</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:center">data_files</td>
<td style="text-align:center">dict</td>
</tr>
</tbody>
</table>
<h1 id="常用功能"><a href="#常用功能" class="headerlink" title="常用功能"></a>常用功能</h1><ul>
<li>当使用 <code>python setup.py --help-commands</code> 时, 可以看到不少指令(在这里列举几个常用的指令)<ul>
<li>此外可以使用 <code>python setup.py &lt;COMMAND&gt; --help</code> 获取详细帮助</li>
</ul>
</li>
</ul>
<h2 id="针对库用户"><a href="#针对库用户" class="headerlink" title="针对库用户:"></a>针对库用户:</h2><table>
<thead>
<tr>
<th>命令</th>
<th>命令描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python setup.py build</code></td>
<td>构建该项目所需文件并将生成物放在 <strong>build/</strong> 中</td>
</tr>
<tr>
<td><code>python setup.py install</code></td>
<td>从 <strong>build/</strong> 中将所需文件安装到目标环境(虚拟环境)的 <strong>site-packages/</strong> 中</td>
</tr>
<tr>
<td><code>python setup.py clean</code></td>
<td>清理从 build 命令下生成的临时文件</td>
</tr>
</tbody>
</table>
<h2 id="针对库开发者"><a href="#针对库开发者" class="headerlink" title="针对库开发者"></a>针对库开发者</h2><h3 id="包的上传-发布相关命令"><a href="#包的上传-发布相关命令" class="headerlink" title="包的上传,发布相关命令"></a>包的上传,发布相关命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>命令描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>python setup.py register</code></td>
<td>!注册该项目(不推荐:http 未加密):<a href="https://segmentfault.com/a/1190000008663126#articleHeader6" target="_blank" rel="noopener">参考</a></td>
</tr>
<tr>
<td><code>python setup.py upload</code></td>
<td>上传二进制文件到 PyPI</td>
</tr>
</tbody>
</table>
<blockquote>
<p>进阶: <a href="https://segmentfault.com/a/1190000008663126" target="_blank" rel="noopener">发布你自己的轮子 - PyPI 打包上传实践</a></p>
</blockquote>
<pre><code class="python">from setuptools import setup

setup(
    name=&#39;dragon&#39;,
    version=&#39;0.0.1&#39;,
    py_modules=[&#39;dragon&#39;],
    include_package_data=True,
    install_requires=[
        &#39;click&#39;,
        &#39;colorama&#39;,
    ],
    license=&#39;MIT&#39;,
    entry_points=&#39;&#39;&#39;
        [console_scripts]
        dragon=dragon:cli
    &#39;&#39;&#39;,
    classifiers=[
        # Trove classifiers
        # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers
        &#39;Programming Language :: Python :: 3.7&#39;,
    ],
)

</code></pre>
<h1 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h1><table>
<thead>
<tr>
<th></th>
<th>介绍</th>
<th>链接</th>
</tr>
</thead>
<tbody>
<tr>
<td>参考模板</td>
<td><strong><code>requests</code></strong> 库作者,写给人类的 setup.py 指南 ;)</td>
<td><a href="https://github.com/kennethreitz/setup.py" target="_blank" rel="noopener">kennethreitz/setup.py</a></td>
</tr>
<tr>
<td>详细教程(En)</td>
<td>有关打包,分发 Python 包的相关教程</td>
<td><a href="https://the-hitchhikers-guide-to-packaging.readthedocs.io/en/latest/creation.html" target="_blank" rel="noopener">The Hitchhiker’s Guide to Packaging</a></td>
</tr>
</tbody>
</table>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul>
<li><a href="https://stackoverflow.com/questions/1471994/what-is-setup-py" target="_blank" rel="noopener">https://stackoverflow.com/questions/1471994/what-is-setup-py</a></li>
<li><a href="http://blog.konghy.cn/2018/04/29/setup-dot-py/" target="_blank" rel="noopener">http://blog.konghy.cn/2018/04/29/setup-dot-py/</a></li>
<li><a href="https://setuptools.readthedocs.io/en/latest/setuptools.html" target="_blank" rel="noopener">https://setuptools.readthedocs.io/en/latest/setuptools.html</a></li>
</ul>
]]></content>
      <categories>
        <category>配置文件</category>
      </categories>
      <tags>
        <tag>Python3</tag>
        <tag>Python3::pip</tag>
        <tag>Python3::PyPI</tag>
      </tags>
  </entry>
  <entry>
    <title>阅读清单</title>
    <url>/2019/01/02/my-awesome-books/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>收集与记录自己学习的资料,电子书等等 (<del>持续更新</del> 想到了就更新\=￣ω￣\=)</p>
</blockquote>
<a id="more"></a>
<h1 id="超级合集-Super-Jar"><a href="#超级合集-Super-Jar" class="headerlink" title="超级合集 Super Jar"></a>超级合集 Super Jar</h1><ul>
<li><a href="https://github.com/justjavac/free-programming-books-zh_CN#android" target="_blank" rel="noopener">(justjavac)免费的计算机编程类中文书籍</a></li>
</ul>
<h1 id="将要读的-To-Read"><a href="#将要读的-To-Read" class="headerlink" title="将要读的 To Read"></a>将要读的 To Read</h1><h2 id="《精通Git》《Pro-Git》-2rdEdition"><a href="#《精通Git》《Pro-Git》-2rdEdition" class="headerlink" title="《精通Git》《Pro Git》 2rdEdition"></a>《精通Git》《Pro Git》 2rdEdition</h2><ul>
<li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">中文版</a> | <a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener">English</a></li>
</ul>
<h1 id="分类-Categories"><a href="#分类-Categories" class="headerlink" title="分类 Categories"></a>分类 Categories</h1><h2 id="编程语言-Programming-Languages"><a href="#编程语言-Programming-Languages" class="headerlink" title="编程语言 Programming Languages"></a>编程语言 Programming Languages</h2><h2 id="版本控制-Version-Control"><a href="#版本控制-Version-Control" class="headerlink" title="版本控制 Version Control"></a>版本控制 Version Control</h2>]]></content>
      <categories>
        <category>个人积累</category>
      </categories>
      <tags>
        <tag>Awesome</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter学习记录</title>
    <url>/2019/01/01/flutter-study-record/</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="上手-入门-A-tour-of-Flutter"><a href="#上手-入门-A-tour-of-Flutter" class="headerlink" title="上手/入门  A tour of Flutter"></a>上手/入门  A tour of Flutter</h1><table>
<thead>
<tr>
<th style="text-align:center">分类</th>
<th style="text-align:center">标题</th>
<th style="text-align:center">介绍</th>
<th style="text-align:center">传送门</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">UI/UX</td>
<td style="text-align:center">Flutter Widget of the Week</td>
<td style="text-align:center">展示一些Widget基本功能, 超短视频,有个印象!</td>
<td style="text-align:center"><a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIL0pH0zWe_ZOHgGhZ7UasUE" target="_blank" rel="noopener">地址</a></td>
</tr>
<tr>
<td style="text-align:center">汇总</td>
<td style="text-align:center">Dart’s Flutter Framework Study</td>
<td style="text-align:center">学习资料大集合,并介绍了如何在不同的页面上保持状态(BottomNavigationBar)</td>
<td style="text-align:center"><a href="https://steemit.com/utopian-io/@tensor/persisting-user-interface-state-and-building-bottom-navigation-bars-in-dart-s-flutter-framework" target="_blank" rel="noopener">地址</a></td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h2 id="基本功-Dart"><a href="#基本功-Dart" class="headerlink" title="基本功 Dart"></a>基本功 Dart</h2><ul>
<li><a href="https://www.dartlang.org/samples" target="_blank" rel="noopener">Sample Code | Dart</a></li>
<li><a href="https://www.dartlang.org/guides/language/effective-dart" target="_blank" rel="noopener">Effective Dart | Dart</a></li>
<li><a href="https://www.dartlang.org/guides/libraries/library-tour" target="_blank" rel="noopener">Library Tour | Dart</a></li>
<li><a href="https://github.com/konieshadow/dart-tour" target="_blank" rel="noopener">konieshadow/dart-tour: Dart语言中文教程，官方文档翻译</a></li>
</ul>
<h2 id="指引-amp-指导-Guide"><a href="#指引-amp-指导-Guide" class="headerlink" title="指引&amp;指导 Guide"></a>指引&amp;指导 Guide</h2><h3 id="Widget-UI输入框-InputWidget"><a href="#Widget-UI输入框-InputWidget" class="headerlink" title="Widget/UI输入框 InputWidget"></a>Widget/UI输入框 InputWidget</h3><ul>
<li><a href="https://blog.csdn.net/yumi0629/article/details/81870615" target="_blank" rel="noopener">Flutter键盘不遮挡输入框，保证输入框获取焦点时可见 - 吉原拉面 - CSDN博客</a></li>
</ul>
<h3 id="异步操作-Asynchronous-Future-amp-async-await"><a href="#异步操作-Asynchronous-Future-amp-async-await" class="headerlink" title="异步操作 Asynchronous : Future &amp; async/await"></a>异步操作 Asynchronous : Future &amp; async/await</h3><ul>
<li><a href="https://stackoverflow.com/questions/46579358/getting-values-from-future-instances" target="_blank" rel="noopener">[异步 Future async/await] dart - Getting values from Future instances - Stack Overflow</a></li>
</ul>
<h3 id="JSON序列化-JSON-Serialization"><a href="#JSON序列化-JSON-Serialization" class="headerlink" title="JSON序列化 JSON Serialization"></a>JSON序列化 JSON Serialization</h3><ul>
<li><a href="https://juejin.im/post/5b5d782ae51d45191c7e7fb3" target="_blank" rel="noopener">[译]在 Flutter 中解析复杂的 JSON - 掘金</a></li>
</ul>
<h3 id="存储-amp-读写文件-File-I-O"><a href="#存储-amp-读写文件-File-I-O" class="headerlink" title="存储&amp;读写文件 File I/O"></a>存储&amp;读写文件 File I/O</h3><ul>
<li><a href="https://flutter.io/docs/cookbook/persistence/reading-writing-files" target="_blank" rel="noopener">Reading and Writing Files - Flutter</a></li>
<li><a href="https://juejin.im/entry/5b1e2451f265da6e26099ad7" target="_blank" rel="noopener">Flutter知识点:数据存储之sqflite - Android - 掘金</a></li>
<li><a href="http://flutter.link/2018/04/13/Flutter%E4%B8%AD%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/" target="_blank" rel="noopener">Flutter中的本地存储 | Flutter开发者</a><ul>
<li>页面跳转 Route/Navigator/…</li>
<li><a href="http://flutter.link/2018/04/02/Flutter%E4%B8%AD%E7%9A%84%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC/" target="_blank" rel="noopener">Flutter中的路由跳转 | Flutter开发者</a></li>
</ul>
</li>
</ul>
<h3 id="未分类-Others"><a href="#未分类-Others" class="headerlink" title="未分类 Others"></a>未分类 Others</h3><ul>
<li><a href="https://medium.com/flutter-io/executing-dart-in-the-background-with-flutter-plugins-and-geofencing-2b3e40a1a124" target="_blank" rel="noopener">[后台执行] Executing Dart in the Background with Flutter Plugins and Geofencing</a></li>
</ul>
<h2 id="工具链-DevToolsChain"><a href="#工具链-DevToolsChain" class="headerlink" title="工具链 DevToolsChain"></a>工具链 DevToolsChain</h2><ul>
<li><a href="https://juejin.im/entry/5af3887b6fb9a07ace58df5e" target="_blank" rel="noopener">Flutter Beta 3 新特性概览 - Android - 掘金</a></li>
</ul>
<h2 id="插件-Useful-Plugin-Package"><a href="#插件-Useful-Plugin-Package" class="headerlink" title="插件 Useful Plugin/Package"></a>插件 Useful Plugin/Package</h2><h3 id="本地存储-持久化-Local-Storage-Data-Persistence"><a href="#本地存储-持久化-Local-Storage-Data-Persistence" class="headerlink" title="本地存储/持久化 Local Storage/Data Persistence"></a>本地存储/持久化 Local Storage/Data Persistence</h3><ul>
<li><a href="https://pub.dartlang.org/packages/shared_preferences" target="_blank" rel="noopener">shared_preferences | Flutter Package</a></li>
<li><a href="https://pub.dartlang.org/packages/sqflite" target="_blank" rel="noopener">sqflite | Flutter Package</a></li>
</ul>
<h3 id="状态管理-State-Management"><a href="#状态管理-State-Management" class="headerlink" title="状态管理 State Management"></a>状态管理 State Management</h3><ul>
<li><a href="https://pub.dartlang.org/packages/flutter_redux" target="_blank" rel="noopener">flutter_redux | Flutter Package</a></li>
</ul>
<h3 id="原生交互-Native-Interaction"><a href="#原生交互-Native-Interaction" class="headerlink" title="原生交互 Native Interaction"></a>原生交互 Native Interaction</h3><ul>
<li><a href="https://pub.dartlang.org/packages/url_launcher#-readme-tab-" target="_blank" rel="noopener">url_launcher | Flutter Package</a></li>
<li><a href="https://pub.dartlang.org/packages/flutter_webview_plugin" target="_blank" rel="noopener">flutter_webview_plugin | Flutter Package</a></li>
</ul>
<h3 id="未分类-Others-1"><a href="#未分类-Others-1" class="headerlink" title="未分类 Others"></a>未分类 Others</h3><ul>
<li>(Flutter暂时使用不了)<a href="https://pub.dartlang.org/packages/dartson#-readme-tab-" target="_blank" rel="noopener">dartson | Dart Package</a></li>
</ul>
<h2 id="优秀仓库-Git-Repository"><a href="#优秀仓库-Git-Repository" class="headerlink" title="优秀仓库 Git Repository"></a>优秀仓库 Git Repository</h2><ul>
<li><a href="https://github.com/zhujian1989/flutter_study" target="_blank" rel="noopener">zhujian1989/flutter_study: flutter知识点学习与实战，问题解决方案记录</a></li>
<li><a href="https://github.com/CarGuo/GSYGithubAppFlutter/blob/master/lib/main.dart" target="_blank" rel="noopener">GSYGithubAppFlutter/main.dart at master · CarGuo/GSYGithubAppFlutter</a></li>
<li><a href="https://github.com/brianegan/flutter_architecture_samples" target="_blank" rel="noopener">brianegan/flutter_architecture_samples: TodoMVC for Flutter</a></li>
<li><a href="https://github.com/brianegan/flutter_architecture_samples" target="_blank" rel="noopener">flutter_architecture_samples</a></li>
<li><a href="https://github.com/ice1000/code_wars_android" target="_blank" rel="noopener">ice1000/code_wars_android: A mobile client for CodeWars</a></li>
</ul>
<h2 id="学习资料参考-Study-Reference"><a href="#学习资料参考-Study-Reference" class="headerlink" title="学习资料参考 Study Reference"></a>学习资料参考 Study Reference</h2><ul>
<li><a href="https://www.dartlang.org/tutorials/language/futures" target="_blank" rel="noopener">Asynchronous Programming: Futures | Dart</a></li>
<li><a href="https://www.dartlang.org/dart-2" target="_blank" rel="noopener">Dart 2 | Dart</a></li>
<li><a href="https://dartcode.org/" target="_blank" rel="noopener">Dart Code - Dart &amp; Flutter support for Visual Studio Code</a></li>
<li><a href="http://www.dartlang.cc/" target="_blank" rel="noopener">Dart: 用于创建结构化的web应用</a></li>
<li><a href="http://dart.goodev.org/" target="_blank" rel="noopener">Dart1.x 编程语言中文网 | Dart</a></li>
<li><a href="https://www.dartlang.org/guides/language/effective-dart" target="_blank" rel="noopener">Effective Dart|Dart</a></li>
<li><a href="https://docs.flutter.io/" target="_blank" rel="noopener">Flutter - Dart API docs</a></li>
<li><a href="https://github.com/Solido/awesome-flutter" target="_blank" rel="noopener">Solido/awesome-flutter</a>- </li>
<li><a href="https://flutter.io/docs/resources/videos" target="_blank" rel="noopener">Technical videos - Flutter</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLBbgqtDgdc_RUWUCInIqxpY--C94C6Xjh" target="_blank" rel="noopener">Fltr::Dart1.x</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLxU9Ryxq6p58PsNmJL70J4_7UzfSqf35n" target="_blank" rel="noopener">Fltr::Dart1.x</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLJbE2Yu2zumDqr_-hqpAN0nIr6m14TAsd" target="_blank" rel="noopener">Fltr::Dart2</a></li>
<li><a href="https://codelabs.developers.google.com/?cat=Flutter" target="_blank" rel="noopener">Google Codelabs</a></li>
<li><a href="https://codelabs.flutter-io.cn/" target="_blank" rel="noopener">Flutter Codelabs</a></li>
<li><a href="https://github.com/flutter/samples/blob/master/INDEX.md" target="_blank" rel="noopener">flutter simple samples</a></li>
<li><a href="https://flutter-io.cn/" target="_blank" rel="noopener">Flutter 社区中文资源</a></li>
<li><a href="https://flutter.io/sdk-archive/#linux" target="_blank" rel="noopener">Flutter SDK Archive - Flutter</a></li>
<li><a href="https://flutterchina.club/" target="_blank" rel="noopener">Flutter中文网</a></li>
<li><a href="https://flutter.io/testing/" target="_blank" rel="noopener">Testing Flutter Apps - Flutter</a></li>
<li><a href="http://flutter.link/" target="_blank" rel="noopener">Flutter开发者</a></li>
<li><a href="https://flutter.io/faq/" target="_blank" rel="noopener">FAQ - Flutter</a></li>
<li><a href="https://juejin.im/post/5bab35ff5188255c3272c228?utm_source=gold_browser_extension" target="_blank" rel="noopener">Flutter 布局控件完结篇 - 掘金</a></li>
<li><a href="https://juejin.im/post/5bac9b1de51d450e452ac1c7?utm_source=gold_browser_extension" target="_blank" rel="noopener">Flutter在混合项目中的构建和集成 - 掘金</a></li>
<li><a href="https://www.dartlang.org/guides/language/language-tour" target="_blank" rel="noopener">Language Tour | Dart</a></li>
<li><a href="https://stackoverflow.com/questions/tagged/flutter" target="_blank" rel="noopener">Newest ‘flutter’ Questions - Stack Overflow</a></li>
<li><a href="https://en.wikipedia.org/wiki/Proxy_pattern" target="_blank" rel="noopener">Proxy pattern - Wikipedia</a></li>
</ul>
<h2 id="素材-设计工具-Assets-Design-Tools"><a href="#素材-设计工具-Assets-Design-Tools" class="headerlink" title="素材/设计工具 Assets/Design Tools"></a>素材/设计工具 Assets/Design Tools</h2><ul>
<li><a href="https://gallery.io/" target="_blank" rel="noopener">Gallery</a></li>
<li><a href="https://material.io/tools/color/" target="_blank" rel="noopener">Color Tool - Material Design</a></li>
<li><a href="https://material.io/tools/theme-editor/" target="_blank" rel="noopener">Theme Editor Home - Material Design</a></li>
<li><a href="https://material.io/design/color/the-color-system.html" target="_blank" rel="noopener">The color system - Material Design</a></li>
<li><a href="https://material.io/" target="_blank" rel="noopener">Homepage - Material Design</a></li>
<li><a href="https://fonts.google.com/" target="_blank" rel="noopener">Google Fonts</a></li>
<li><a href="https://thenounproject.com/" target="_blank" rel="noopener">Noun Project - Icons for Everything</a></li>
<li><a href="https://unsplash.com/" target="_blank" rel="noopener">Beautiful Free Images &amp; Pictures | Unsplash</a></li>
</ul>
<h2 id="一些问题-Some-Problems"><a href="#一些问题-Some-Problems" class="headerlink" title="一些问题 Some Problems"></a>一些问题 Some Problems</h2><ul>
<li>这是陨石坑儿(未整理)</li>
<li><a href="https://github.com/flutter/flutter/issues/13763" target="_blank" rel="noopener">flutter_gallery_assets cannot use alternate storage locations · Issue #13763 · flutter/flutter</a></li>
<li><a href="https://github.com/konifar/droidkaigi2018-flutter/issues/64" target="_blank" rel="noopener">Android App Gradle编译 key.properties (没有那个文件或目录)</a></li>
<li><a href="https://github.com/flutter/flutter/wiki/Using-Flutter-in-China" target="_blank" rel="noopener">Using Flutter in China · flutter/flutter Wiki</a></li>
</ul>
<h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑:"></a>踩过的坑:</h1><h2 id="BottomNavigation-底部选项卡-无法保持各个页面状态-这不符合直觉"><a href="#BottomNavigation-底部选项卡-无法保持各个页面状态-这不符合直觉" class="headerlink" title="BottomNavigation(底部选项卡)无法保持各个页面状态,这不符合直觉"></a>BottomNavigation(底部选项卡)无法保持各个页面状态,这不符合直觉</h2><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><ul>
<li><p><strong>关键类</strong> : <a href="https://docs.flutter.io/flutter/widgets/PageStorageKey-class.html" target="_blank" rel="noopener">PageStorageKey</a>, <a href="https://docs.flutter.io/flutter/widgets/PageStorageBucket-class.html" target="_blank" rel="noopener">PageStorageBucket</a></p>
</li>
<li><p><strong>示例代码</strong> :</p>
<ul>
<li>见 <a href="https://github.com/tensor-programming/flutter_presistance_bottom_nav_tutorial/blob/master/lib/main.dart" target="_blank" rel="noopener">flutter_presistance_bottom_nav_tutorial</a></li>
</ul>
</li>
<li><p><strong>关键代码</strong> : </p>
<pre><code class="dart">final PageStorageBucket bucket = PageStorageBucket();
//...
return Scaffold(
body: PageStorage(
  child: currentPage,
  bucket: bucket,
),
//...
PageStorage.of(context).writeState(context, b,
  identifier: ValueKey(
    &#39;${widget.dataList[index].id}&#39;,
  ));
</code></pre>
</li>
<li><p><strong>注意点</strong> : 每个新的继承 <code>StatefulWidget</code> , <code>StatelessWidget</code> 或自定义Widget的新的Widget,要提供 <code>Key</code> 的构造参数并调用super(key:key),以确保框架提供相应支持
<code>`</code>dart</p>
</li>
</ul>
<p>class MyWidgetOrPage extend StatelessWidget{
    MyWidgetOrPage(Key key, {…}):super(Key:key);
    //…
}</p>
<p>class MyWidgetOrPage extend StatefulWidget{
    MyWidgetOrPage(Key key, {…}):super(Key:key);
    //…
}</p>
<p>//…
<code>`</code></p>
<h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><ul>
<li><strong>关键类</strong> : <a href="https://docs.flutter.io/flutter/widgets/AutomaticKeepAliveClientMixin-mixin.html" target="_blank" rel="noopener">AutomaticKeepAliveClientMixin</a></li>
<li><strong>示例代码</strong><ul>
<li>见 <a href="https://github.com/OpenFlutter/Flutter-Notebook/tree/master/mecury_project/example/flutter_bottomnavigationbar" target="_blank" rel="noopener">flutter_bottomnavigationbar</a></li>
</ul>
</li>
</ul>
<h3 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h3><ul>
<li><strong>参考</strong><ul>
<li><a href="https://stackoverflow.com/a/49443009/9316144" target="_blank" rel="noopener">StackOverFlow</a></li>
<li><a href="https://steemit.com/utopian-io/@tensor/persisting-user-interface-state-and-building-bottom-navigation-bars-in-dart-s-flutter-framework" target="_blank" rel="noopener">Persisting User Interface State and Building Bottom Navigation Bars in Dart’s Flutter Framework</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>移动端开发</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
      </tags>
  </entry>
</search>
